{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/fontawesome.js","webpack:///./src/QuantityFilter.jsx","webpack:///./src/CategoryFilter.jsx","webpack:///./src/Filters.jsx","webpack:///./src/InventoryTable.jsx","webpack:///./src/graphQLFetch.js","webpack:///./src/Toast.jsx","webpack:///./src/ProductInformation.jsx","webpack:///./src/InventoryTableComp.jsx","webpack:///./src/InventoryList.jsx","webpack:///./src/NumInput.jsx","webpack:///./src/DateInput.jsx","webpack:///./src/store.js","webpack:///./src/ProductEdit.jsx","webpack:///./src/About.jsx","webpack:///./src/NotFound.jsx","webpack:///./src/AccountCreate.jsx","webpack:///./src/Login.jsx","webpack:///./src/routes.js","webpack:///./src/ProductReport.jsx","webpack:///./src/AccountCreateAndLogin.jsx","webpack:///./src/Contents.jsx","webpack:///./src/ProductAddNav.jsx","webpack:///./src/Page.jsx","webpack:///./browser/App.jsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","library","add","faBirthdayCake","faCookieBite","faStroopwafel","faBreadSlice","QuantityFilter","search","location","params","URLSearchParams","state","quantity","changed","onChangeQuantityStatus","applyFilter","showOriginalFilter","prevProps","this","props","e","setState","target","history","pathname","onChange","Button","bsStyle","type","onClick","disabled","React","Component","withRouter","CategoryFilter","category","getAll","onChangeStatus","newCategories","undefined","categories","ToggleButtonGroup","size","ToggleButton","icon","Filters","InventoryRow","product","deleteProduct","updateProduct","index","selectLocation","id","editTooltip","Tooltip","placement","deleteTooltip","smUpdateTooltip","lgUpdateTooltip","minUpdateTooltip","quickUpdate","incrAmt","preventDefault","updatedDate","formattedUpdatedDate","toDateString","toTimeString","substr","expirationDate","formattedExpiration","tableRow","description","OverlayTrigger","delayShow","overlay","bsSize","Glyphicon","glyph","to","InventoryTable","inventory","inventoryRows","map","Table","bordered","condensed","hover","responsive","dateRegex","RegExp","jsonDateReviver","test","Date","graphQLFetch","query","variables","showError","apiEndpoint","ENV","UI_API_ENDPOINT","fetch","method","headers","body","JSON","stringify","response","text","parse","errors","error","extensions","code","details","exception","join","message","Toast","showing","onDismiss","clearTimeout","dismissTimer","setTimeout","children","Collapse","in","style","position","bottom","left","Alert","ProductInformation","loadData","match","parseInt","information","createdDate","formattedCreated","InventoryList","toastVisible","toastMessage","toastType","showSuccess","dismissToast","queryVariables","split","console","log","vars","productList","productDelete","prevState","newList","Fragment","Panel","Heading","Title","toggle","Body","collapsible","Route","path","component","NumInput","num","toString","onBlur","val","Number","isNaN","DateInput","date","toISOString","focused","valid","onFocus","oldValid","onValidityChange","dateValue","getTime","origValue","className","displayValue","placeholder","store","ProductEdit","initialData","invalidFields","handleSubmit","prevId","event","naturalValue","textValue","keys","created","changes","productUpdate","alert","fetchData","propsId","validationMessage","getMonth","getDate","getFullYear","toLocaleTimeString","onSubmit","rows","cols","Link","About","apiAbout","about","NotFound","AccountCreate","form","document","forms","accountCreate","user","username","password","role","options","accountCreated","FormGroup","Col","sm","ControlLabel","FormControl","ButtonToolbar","justified","defaultValue","propTypes","addUser","PropTypes","func","Login","loginForm","authenticated","bsType","routes","Grid","Tabs","defaultActiveKey","Tab","eventKey","title","alignSelf","Contents","Switch","Redirect","exact","from","attrs","ProductAddNav","showModal","hideModal","productAdd","expirationTime","defaultExpiration","NavItem","Modal","keyboard","show","onHide","Header","closeButton","Form","componentClass","Footer","NavBar","Navbar","Brand","Nav","MenuItem","pullRight","Page","fluid","__INITIAL_DATA__","element","ReactDOM","hydrate","getElementById"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrBiB,EAAG,GAGAZ,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU8B,QAGnC,IAAIC,EAASH,EAAiB5B,GAAY,CACzCK,EAAGL,EACHgC,GAAG,EACHF,QAAS,IAUV,OANAhB,EAAQd,GAAUW,KAAKoB,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG/DK,EAAOC,GAAI,EAGJD,EAAOD,QAKfJ,EAAoBO,EAAInB,EAGxBY,EAAoBQ,EAAIN,EAGxBF,EAAoBS,EAAI,SAASL,EAASM,EAAMC,GAC3CX,EAAoBY,EAAER,EAASM,IAClC5B,OAAO+B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEX,EAAoBgB,EAAI,SAASZ,GACX,oBAAXa,QAA0BA,OAAOC,aAC1CpC,OAAO+B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DrC,OAAO+B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKzC,OAAO0C,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBzC,OAAO+B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBS,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAL,EAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRX,EAAoBY,EAAI,SAASgB,EAAQC,GAAY,OAAO/C,OAAOC,UAAUC,eAAeC,KAAK2C,EAAQC,IAGzG7B,EAAoB8B,EAAI,IAExB,IAAIC,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAW5C,KAAKuC,KAAKK,GAC5CA,EAAW5C,KAAOf,EAClB2D,EAAaA,EAAWG,QACxB,IAAI,IAAIvD,EAAI,EAAGA,EAAIoD,EAAWlD,OAAQF,IAAKP,EAAqB2D,EAAWpD,IAC3E,IAAIU,EAAsB4C,EAI1B1C,EAAgBJ,KAAK,CAAC,IAAI,IAEnBM,I,+9CCjJT0C,IAAQC,IACJC,IACAC,IACAC,IACAC,K,ICFEC,E,sQAEJ,cAAsC,MAAZC,EAAY,EAAxBC,SAAYD,Q,4FAAY,SACpC,eACA,IAAME,EAAS,IAAIC,IAAgBH,GAFC,OAGpC,EAAKI,MAAQ,CACXC,SAAUH,EAAO7B,IAAI,aAAe,GACpCiC,SAAS,GAGX,EAAKC,uBAAyB,EAAKA,uBAAuBvB,KAA5B,MAC9B,EAAKwB,YAAc,EAAKA,YAAYxB,KAAjB,MACnB,EAAKyB,mBAAqB,EAAKA,mBAAmBzB,KAAxB,MAVU,E,wDAanB0B,GAC4BA,EAArCT,SAAYD,SACaW,KAAKC,MAA9BX,SAAYD,QAElBW,KAAKF,uB,6CAIcI,GACrBF,KAAKG,SAAS,CAAET,SAAUQ,EAAEE,OAAOtC,MAAO6B,SAAS,M,2CAGhC,IACCN,EAAaW,KAAKC,MAA9BX,SAAYD,OACdE,EAAS,IAAIC,IAAgBH,GACnCW,KAAKG,SAAS,CACZT,SAAUH,EAAO7B,IAAI,aAAe,GACpCiC,SAAS,M,oCAIC,IACJD,EAAaM,KAAKP,MAAlBC,SACYM,KAAKC,MAAjBI,QACAvE,KAAK,CACXwE,SAAU,YACVjB,OAAQK,EAAW,aAAH,OAAgBA,GAAa,O,+BASxC,MACuBM,KAAKP,MAA3BC,EADD,EACCA,SAAUC,EADX,EACWA,QAClB,OACI,6BACE,mDAEG,IACD,4BAAQ7B,MAAO4B,EAAUa,SAAUP,KAAKJ,wBACtC,4BAAQ9B,MAAM,IAAd,kBACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,qBAED,IACD,kBAAC0C,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,SAASC,QAASX,KAAKH,aAAtD,SAGC,IACD,kBAACW,EAAA,EAAD,CAAQE,KAAK,SAASC,QAASX,KAAKF,mBAAoBc,UAAWjB,GAAnE,gB,8BAnEiBkB,IAAMC,WA8EpBC,cAAW3B,G,2uCC/EpB4B,E,sQAEF,cAAsC,MAAZ3B,EAAY,EAAxBC,SAAYD,Q,4FAAY,SAClC,eACA,IAAME,EAAS,IAAIC,IAAgBH,GAFD,OAGlC,EAAKI,MAAQ,CACTwB,SAAU1B,EAAO2B,OAAO,aAAe,IAG3C,EAAKC,eAAiB,EAAKA,eAAe9C,KAApB,MACtB,EAAKyB,mBAAqB,EAAKA,mBAAmBzB,KAAxB,MARQ,E,wDAWnB0B,GAC8BA,EAArCT,SAAYD,OACaW,KAAKC,MAA9BX,SAAYD,S,2CAMH,IACGA,EAAaW,KAAKC,MAA9BX,SAAYD,OACdE,EAAS,IAAIC,IAAgBH,GACnCW,KAAKG,SAAS,CACVc,SAAU1B,EAAO7B,IAAI,aAAe,O,qCAI7BwC,GAEX,IAAIkB,EAEAA,OAD0BC,IAA1BrB,KAAKP,MAAM6B,WACK,CAACpB,GAKDF,KAAKP,MAAM6B,WAAWxF,KAAKoE,GAI/CF,KAAKG,SAAS,CACVc,SAAUG,IAdA,IAiBNf,EAAYL,KAAKC,MAAjBI,QACaL,KAAKP,MAAlBwB,SAGRZ,EAAQvE,KAAK,CACTwE,SAAU,YACVjB,OAAQ,aAAF,OAAea,O,+BAWzB,OAFqBF,KAAKP,MAAlBwB,SAGJ,mDAEI,kBAACM,EAAA,EAAD,CAAmBC,KAAK,QACLd,KAAK,WACLH,SAAUP,KAAKmB,gBAC9B,kBAACM,EAAA,EAAD,CAAc3D,MAAM,QAChB,kBAAC,IAAD,CAAiB4D,KAAM,CAAC,MAAO,mBAC9B,IAFL,mBAKA,kBAACD,EAAA,EAAD,CAAc3D,MAAM,UAChB,kBAAC,IAAD,CAAiB4D,KAAM,CAAC,MAAO,iBAC9B,IAFL,WAKA,kBAACD,EAAA,EAAD,CAAc3D,MAAM,UAChB,kBAAC,IAAD,CAAiB4D,KAAM,CAAC,MAAO,iBAC9B,IAFL,YAKA,kBAACD,EAAA,EAAD,CAAc3D,MAAM,SAChB,kBAAC,IAAD,CAAiB4D,KAAM,CAAC,MAAO,iBAC9B,IAFL,iB,8BApFSb,IAAMC,WAgGpBC,cAAWC,G,2yCClGLW,E,0WAGb,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,8BANqBd,IAAMC,W,uCCKrCc,GAAeb,aAAW,YAE1B,IADJc,EACI,EADJA,QAAqBxC,EACjB,EADKC,SAAYD,OAAUyC,EAC3B,EAD2BA,cAAeC,EAC1C,EAD0CA,cAAeC,EACzD,EADyDA,MAEvDC,EAAiB,CAAE3B,SAAU,aAAF,OAAeuB,EAAQK,IAAM7C,UACxD8C,EACJ,kBAACC,EAAA,EAAD,CAASF,GAAG,gBAAgBG,UAAU,OAAtC,kBAEIC,EACJ,kBAACF,EAAA,EAAD,CAASF,GAAG,iBAAiBG,UAAU,OAAvC,oBAEIE,EACJ,kBAACH,EAAA,EAAD,CAASF,GAAG,uBAAuBG,UAAU,OAA7C,MAEIG,EACJ,kBAACJ,EAAA,EAAD,CAASF,GAAG,uBAAuBG,UAAU,OAA7C,MAEII,EACJ,kBAACL,EAAA,EAAD,CAASF,GAAG,uBAAuBG,UAAU,OAA7C,MAYF,SAASK,EAAYxC,EAAGyC,GACtBzC,EAAE0C,iBACFb,EAAcC,EAAOW,GAGvB,IAAME,EAAchB,EAAQgB,YACtBC,EAAuBD,EACzBA,EAAYE,eAAiB,IAAMF,EAAYG,eAAeC,OAAO,EAAE,GACvE,IACEC,EAAiBrB,EAAQqB,eACzBC,EAAsBD,EACxBA,EAAeH,eAAiB,IAAMG,EAAeF,eAAeC,OAAO,EAAE,GAC7E,IAEEG,EACJ,4BACE,4BAAKvB,EAAQK,IACb,4BAAKL,EAAQwB,aACb,4BAAKxB,EAAQZ,UACb,4BAAK6B,GACL,4BAAKK,GACL,4BAAKtB,EAAQnC,UACb,4BACE,kBAAC4D,GAAA,EAAD,CAAgBC,UAAW,IAAMC,QAASjB,GACxC,kBAAC/B,EAAA,EAAD,CAAQiD,OAAO,SAAS9C,QAAS,SAAAT,GAAC,OAAIwC,EAAYxC,EAjCnC,KAkCb,kBAACwD,GAAA,EAAD,CAAWC,MAAM,WAGrB,kBAACL,GAAA,EAAD,CAAgBC,UAAW,IAAMC,QAAShB,GACxC,kBAAChC,EAAA,EAAD,CAAQiD,OAAO,SAAS9C,QAAS,SAAAT,GAAC,OAAIwC,EAAYxC,EArCnC,KAsCb,kBAACwD,GAAA,EAAD,CAAWC,MAAM,gBAGrB,kBAACL,GAAA,EAAD,CAAgBC,UAAW,IAAMC,QAASf,GACxC,kBAACjC,EAAA,EAAD,CAAQiD,OAAO,SAAS9C,QAAS,SAAAT,GAAC,OAAIwC,EAAYxC,GAzCpC,KA0CZ,kBAACwD,GAAA,EAAD,CAAWC,MAAM,YAGpB,IACD,kBAAC,gBAAD,CAAeC,GAAE,gBAAW/B,EAAQK,KAClC,kBAACoB,GAAA,EAAD,CAAgBC,UAAW,IAAMC,QAASrB,GACxC,kBAAC3B,EAAA,EAAD,CAAQiD,OAAO,UACb,kBAACC,GAAA,EAAD,CAAWC,MAAM,YAItB,IACD,kBAACL,GAAA,EAAD,CAAgBC,UAAW,IAAMC,QAASlB,GACxC,kBAAC9B,EAAA,EAAD,CAAQiD,OAAO,SAAS9C,QArDhC,SAAkBT,GAChBA,EAAE0C,iBACFd,EAAcE,KAoDN,kBAAC0B,GAAA,EAAD,CAAWC,MAAM,cAM3B,OACE,kBAAC,gBAAD,CAAeC,GAAI3B,GAChBmB,MASQ,SAASS,GAAT,GAAqE,IAA3CC,EAA2C,EAA3CA,UAAWhC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,cAC3DgC,EAAgBD,EAAUE,KAAI,SAACnC,EAASG,GAAV,OAClC,kBAACJ,GAAD,CACExD,IAAKyD,EAAQK,GACbL,QAASA,EACTC,cAAeA,EACfC,cAAeA,EACfC,MAAOA,OAIX,OACE,kBAACiC,GAAA,EAAD,CAAOC,UAAQ,EAACC,WAAS,EAACC,OAAK,EAACC,YAAU,GACxC,+BACE,4BACE,kCACA,2CACA,wCACA,4CACA,+CACA,wCACA,wCAGJ,+BACGN,I,yVChIT,IAAMO,GAAY,IAAIC,OAAO,+BAE7B,SAASC,GAAgBpG,EAAKN,GAC5B,OAAIwG,GAAUG,KAAK3G,GAAe,IAAI4G,KAAK5G,GAAeA,EAG7C,SAAe6G,GAA9B,mC,oDAAe,WAA4BC,GAA5B,uHAAmCC,EAAnC,+BAA+C,GAAIC,EAAnD,+BAA+D,KACtEC,EACFpG,OAAOqG,IAAIC,gBAFF,kBAKYC,KAAMH,EAAa,CACxCI,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEX,QAAOC,gBARrB,cAKLW,EALK,gBAUQA,EAASC,OAVjB,cAULJ,EAVK,QAWLhJ,EAASiJ,KAAKI,MAAML,EAAMb,KAErBmB,SAEqB,oBADxBC,EAAQvJ,EAAOsJ,OAAO,IAClBE,WAAWC,MACbC,EAAUH,EAAMC,WAAWG,UAAUL,OAAOM,KAAK,OACjDnB,GAAWA,EAAU,GAAD,OAAIc,EAAMM,QAAV,eAAwBH,KACzCjB,GACPA,EAAU,GAAD,OAAIc,EAAMC,WAAWC,KAArB,aAA8BF,EAAMM,WAnBxC,kBAsBJ7J,EAAOrB,MAtBH,yCAwBL8J,GAAWA,EAAU,oCAAD,OAAqC,KAAEoB,UAxBtD,kBAyBJ,MAzBI,2D,u2CCNMC,G,yXACE,MACYnG,KAAKC,MAA5BmG,EADW,EACXA,QAASC,EADE,EACFA,UACbD,IACFE,aAAatG,KAAKuG,cAClBvG,KAAKuG,aAAeC,WAAWH,EAAW,Q,6CAI5CC,aAAatG,KAAKuG,gB,+BAEX,MAGHvG,KAAKC,MADPmG,EAFK,EAELA,QAAS3F,EAFJ,EAEIA,QAAS4F,EAFb,EAEaA,UAAWI,EAFxB,EAEwBA,SAE/B,OACE,kBAACC,GAAA,EAAD,CAAUC,GAAIP,GACZ,yBAAKQ,MAAO,CAAEC,SAAU,QAASC,OAAQ,GAAIC,KAAM,KACjD,kBAACC,GAAA,EAAD,CAAOvG,QAASA,EAAS4F,UAAWA,GACjCI,U,gCAnBsB5F,IAAMC,W,o1CCEpBmG,G,4QACnB,aAAc,a,4FAAA,UACZ,gBACKxH,MAAQ,CAAEoC,QAAS,IAFZ,E,yDAMZ7B,KAAKkH,a,yCAGYnH,GAC6BA,EAAtCoH,MAAS5H,OAAU2C,KACWlC,KAAKC,MAAnCkH,MAAS5H,OAAU2C,IAEzBlC,KAAKkH,a,8JAKoBhF,EAAWlC,KAAKC,MAAnCkH,MAAS5H,OAAU2C,G,SAORyC,G,4GAAoB,CAAEzC,GAAIkF,SAASlF,EAAI,M,QAApDlH,E,QAEJgF,KAAKG,SAAS,CAAE0B,QAAS7G,EAAK6G,UAE9B7B,KAAKG,SAAS,CAAE0B,QAAS,K,6SAIpB,MAC2C7B,KAAKP,MAA/CoC,QAAWwF,EADZ,EACYA,YAAaC,EADzB,EACyBA,YAC1BC,EAAmBD,EACvBA,EAAYvE,eAAiB,IAAMuE,EAAYtE,eAAeC,OAAO,EAAE,GACvE,IACF,OACE,6BACE,4CACA,yCAAeoE,GACf,8CAAoBE,S,gCA3CoB1G,IAAMC,W,OCQzCmD,M,8wECIQuD,G,4QACnB,aAAc,a,4FAAA,UACZ,gBACO/H,MAAQ,CACTqE,UAAW,GACX2D,cAAc,EACdC,aAAc,IACdC,UAAW,QAEf,EAAK7F,cAAgB,EAAKA,cAAczD,KAAnB,OACrB,EAAKuJ,YAAc,EAAKA,YAAYvJ,KAAjB,OACnB,EAAKyG,UAAY,EAAKA,UAAUzG,KAAf,OACjB,EAAKwJ,aAAe,EAAKA,aAAaxJ,KAAlB,OAXV,E,yDAgBZ2B,KAAKkH,a,yCAIYnH,GAC4BA,EAArCT,SAAYD,SACaW,KAAKC,MAA9BX,SAAYD,QAElBW,KAAKkH,a,qKAMa7H,EAAaW,KAAKC,MAA9BX,SAAYD,OACdE,EAAS,IAAIC,IAAgBH,GAC7ByI,EAAiB,GACnBvI,EAAO7B,IAAI,cAAaoK,EAAepI,SAAW0H,SAAS7H,EAAO7B,IAAI,YAAa,KACnF6B,EAAO7B,IAAI,cAAaoK,EAAe7G,SAAW1B,EAAO7B,IAAI,YAAYqK,MAAM,MAGnFC,QAAQC,IAAI,oB,SAUStD,G,8KAAoBuD,KAAMJ,EAAgB9H,KAAK8E,W,QAA5D9J,E,SAGNgN,QAAQC,IAAI,+BACZjI,KAAKG,SAAS,CAAE2D,UAAW9I,EAAKmN,eAGhCH,QAAQC,IAAI,iC,mKAKIjG,G,2GAIV8B,EAAc9D,KAAKP,MAAnBqE,U,EAE4C9D,KAAKC,M,IAAjDX,SAAYgB,E,EAAAA,SAAUjB,E,EAAAA,OAAUgB,E,EAAAA,QAC9B6B,EAAO4B,EAAU9B,GAAjBE,G,SACWyC,G,2EAAoB,CAAEzC,GAAIkF,SAASlF,EAAI,KAAOlC,KAAK8E,W,QAAhE9J,E,SACIA,EAAKoN,eACfpI,KAAKG,UAAS,SAACkI,GACb,IAAMC,EAAU,GAAID,EAAUvE,WAK9B,OAJIxD,IAAa,aAAL,OAAkB4B,IAC5B7B,EAAQvE,KAAK,CAAEwE,SAAU,YAAajB,WAExCiJ,EAAQ5L,OAAOsF,EAAO,GACf,CAAE8B,UAAWwE,MAEpBtI,KAAK4H,YAAL,0BAAoC1F,EAApC,oBAEFlC,KAAKkH,W,6HAIA,IACCpD,EAAc9D,KAAKP,MAAnBqE,UACAqD,EAAUnH,KAAKC,MAAfkH,MACR,OACE,kBAAC,IAAMoB,SAAP,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAMC,QAAP,KACE,kBAACD,EAAA,EAAME,MAAP,CAAaC,QAAM,GAAnB,WAEF,kBAACH,EAAA,EAAMI,KAAP,CAAYC,aAAW,GACrB,kBAAC,EAAD,QAGJ,6BACA,kBAAChF,GAAD,CAAgBC,UAAWA,EAAWhC,cAAe9B,KAAK8B,cAAeC,cAAe/B,KAAK+B,gBAC7F,6BACA,kBAAC+G,EAAA,EAAD,CAAOC,KAAI,UAAK5B,EAAM4B,KAAX,QAAuBC,UAAW/B,W,gCApGVpG,IAAMC,W,67CCL5BmI,G,wQACnB,WAAYhJ,GAAO,MAVLiJ,EAUK,O,4FAAA,UACjB,cAAMjJ,IACDR,MAAQ,CAAE3B,OAZHoL,EAYiBjJ,EAAMnC,MAXvB,MAAPoL,EAAcA,EAAIC,WAAa,KAYpC,EAAKC,OAAS,EAAKA,OAAO/K,KAAZ,OACd,EAAKkC,SAAW,EAAKA,SAASlC,KAAd,OAJC,E,8CAOV6B,GACHA,EAAEE,OAAOtC,MAAMqJ,MAAM,UACvBnH,KAAKG,SAAS,CAAErC,MAAOoC,EAAEE,OAAOtC,U,6BAI7BoC,GAAG,IAlBJmJ,EAmBI9I,EAAaP,KAAKC,MAAlBM,SACAzC,EAAUkC,KAAKP,MAAf3B,MACRyC,EAASL,GArBLmJ,EAAMjC,SAqBWtJ,EArBG,IACnBwL,OAAOC,MAAMF,GAAO,KAAOA,M,+BAuBzB,IACCvL,EAAUkC,KAAKP,MAAf3B,MACR,OACE,8BACE4C,KAAK,QACDV,KAAKC,MAFX,CAGEnC,MAAOA,EACPsL,OAAQpJ,KAAKoJ,OACb7I,SAAUP,KAAKO,iB,gCA5BeM,IAAMC,W,+tCCIvB0I,G,wQACnB,WAAYvJ,GAAO,MAVDwJ,EAUC,O,4FAAA,UACjB,cAAMxJ,IACDR,MAAQ,CACX3B,OAbc2L,EAaIxJ,EAAMnC,MAZZ,MAAR2L,EAAgBA,EAAKC,cAAczG,OAAO,EAAG,IAAM,IAavD0G,SAAS,EACTC,OAAO,GAET,EAAKC,QAAU,EAAKA,QAAQxL,KAAb,OACf,EAAK+K,OAAS,EAAKA,OAAO/K,KAAZ,OACd,EAAKkC,SAAW,EAAKA,SAASlC,KAAd,OATC,E,+CAajB2B,KAAKG,SAAS,CAAEwJ,SAAS,M,6BAGpBzJ,GAAG,IArBJmJ,EAqBI,EAC2BrJ,KAAKP,MAAhC3B,EADA,EACAA,MAAcgM,EADd,EACOF,MADP,EAE+B5J,KAAKC,MAApC8J,EAFA,EAEAA,iBAAkBxJ,EAFlB,EAEkBA,SACpByJ,GAxBFX,EAAM,IAAI3E,KAwBa5G,GAvBtBwL,OAAOC,MAAMF,EAAIY,WAAa,KAAOZ,GAwBpCO,EAAkB,KAAV9L,GAA6B,MAAbkM,EAC1BJ,IAAUE,GAAYC,GACxBA,EAAiB7J,EAAG0J,GAEtB5J,KAAKG,SAAS,CAAEwJ,SAAS,EAAOC,UAC5BA,GAAOrJ,EAASL,EAAG8J,K,+BAGhB9J,GACHA,EAAEE,OAAOtC,MAAMqJ,MAAM,aACvBnH,KAAKG,SAAS,CAAErC,MAAOoC,EAAEE,OAAOtC,U,+BAI3B,IAhDY2L,EAgDZ,EAC2BzJ,KAAKP,MAA/BmK,EADD,EACCA,MAAOD,EADR,EACQA,QAAS7L,EADjB,EACiBA,MADjB,EAE4BkC,KAAKC,MAAzBiK,EAFR,EAECpM,MAAkBT,EAFnB,EAEmBA,KACpB8M,EAAcP,GAAUD,EAAuB,KAAZ,UACnCS,EAAgBT,IAAYC,EAAS9L,EAnD7B,OADK2L,EAqDDS,GApDIT,EAAK1G,eAAiB,GAqD5C,OACE,2BACErC,KAAK,OACLc,KAAM,GACNnE,KAAMA,EACN8M,UAAWA,EACXrM,MAAOsM,EACPC,YAAaV,EAAU,aAAe,KACtCE,QAAS7J,KAAK6J,QACdT,OAAQpJ,KAAKoJ,OACb7I,SAAUP,KAAKO,gB,gCAnDgBM,IAAMC,WCd9BwJ,GADD,G,6oFCSOC,G,wQAYjB,aAAc,O,4FAAA,SACV,eACA,IAAM1I,EAAUyI,GAAME,YAAcF,GAAME,YAAY3I,QAAU,KAFtD,cAGHyI,GAAME,YACb,EAAK/K,MAAQ,CACToC,UACA4I,cAAe,GACfhD,cAAc,EACdC,aAAc,IACdC,UAAW,WAEf,EAAKpH,SAAW,EAAKA,SAASlC,KAAd,OAChB,EAAKqM,aAAe,EAAKA,aAAarM,KAAlB,OACpB,EAAK0L,iBAAmB,EAAKA,iBAAiB1L,KAAtB,OACxB,EAAKuJ,YAAc,EAAKA,YAAYvJ,KAAjB,OACnB,EAAKyG,UAAY,EAAKA,UAAUzG,KAAf,OACjB,EAAKwJ,aAAe,EAAKA,aAAaxJ,KAAlB,OAhBV,E,mFAXS8I,EAAOrC,G,+FAOR5C,EAASiF,EAAnB5H,OAAU2C,G,SACGyC,G,6KAAoB,CAAEzC,GAAIkF,SAASlF,EAAI,KAAO4C,G,cAA7DzI,E,yBACCA,G,6IAuBQ,MADK2D,KAAKP,MAAjBoC,SACa7B,KAAKkH,a,yCAGXnH,GAAW,IACK4K,EAAe5K,EAAtCoH,MAAS5H,OAAU2C,GACWlC,KAAKC,MAAnCkH,MAAS5H,OAAU2C,KAChByI,GACP3K,KAAKkH,a,+BAIJ0D,EAAOC,GAAc,MACSD,EAAMxK,OAAjC/C,EADkB,EAClBA,KAAayN,EADK,EACZhN,MACRA,OAAyBuD,IAAjBwJ,EAA6BC,EAAYD,EACvD7K,KAAKG,UAAS,SAAAkI,GAAS,MAAK,CACxBxG,QAAS,GAAF,MAAOwG,EAAUxG,SAAjB,SAA2BxE,EAAOS,U,uCAIhC8M,EAAOhB,GAAO,IACnBvM,EAASuN,EAAMxK,OAAf/C,KACR2C,KAAKG,UAAS,SAACkI,GACX,IAAMoC,EAAgB,GAAH,MAAQpC,EAAUoC,eAAlB,SAAkCpN,GAAQuM,IAE7D,OADIA,UAAca,EAAcpN,GACzB,CAAEoN,sB,oEAIEvK,G,mGACfA,EAAE0C,iB,EACiC5C,KAAKP,MAAhCoC,E,EAAAA,QAAS4I,E,EAAAA,cACyB,IAAtChP,OAAOsP,KAAKN,GAAejP,O,wDAavB0G,EAA4BL,EAA5BK,GAA4BL,EAAxBmJ,SAAYC,E,GAAYpJ,E,mBAC7B,YAAkB,IAAI6C,MAAK,IAAIA,MAAOuF,UAAY,O,SACtCtF,G,8RAAoB,CAAEsG,UAAS/I,GAAIkF,SAASlF,EAAI,KAAOlC,KAAK8E,W,QAAzE9J,E,UAEFgF,KAAKG,SAAS,CAAE0B,QAAS7G,EAAKkQ,gBAC9BC,MAAM,iC,gQAKNhE,EAAUnH,KAAKC,MAAfkH,M,SACWoD,EAAYa,UAAUjE,EAAO,KAAMnH,KAAK8E,W,OAArD9J,E,OACNgF,KAAKG,SAAS,CAAE0B,QAAS7G,EAAOA,EAAK6G,QAAU,GAAI4I,cAAe,K,+HAGtDvE,GACRlG,KAAKG,SAAS,CACVsH,cAAc,EAAMC,aAAcxB,EAASyB,UAAW,a,gCAIpDzB,GACNlG,KAAKG,SAAS,CACdsH,cAAc,EAAMC,aAAcxB,EAASyB,UAAW,c,qCAKlD3H,KAAKG,SAAS,CAAEsH,cAAc,M,+BAMtC,GAAgB,OADIzH,KAAKP,MAAjBoC,QACc,OAAO,KAFtB,IAGYK,EAASlC,KAAKP,MAAzBoC,QAAWK,GACYmJ,EAAgBrL,KAAKC,MAA5CkH,MAAS5H,OAAU2C,GAC3B,GAAW,OAAPA,EACF,OAAe,MAAXmJ,EACK,sDAAwBA,EAAxB,uBAEF,KATF,IAaHC,EADIb,EAAkBzK,KAAKP,MAAvBgL,cAGkC,IAAtChP,OAAOsP,KAAKN,GAAejP,SAC7B8P,EACE,yBAAKnB,UAAU,SAAf,qDAjBG,MAuBwCnK,KAAKP,MAA5CoC,QAAWwB,EAvBZ,EAuBYA,YAAa3D,EAvBzB,EAuByBA,SAvBzB,EAwBwCM,KAAKP,MAA5CoC,QAAWZ,EAxBZ,EAwBYA,SAAUoG,EAxBtB,EAwBsBA,YAxBtB,EAyB8CrH,KAAKP,MAAlDoC,QAAWyF,EAzBZ,EAyBYA,YAAapE,EAzBzB,EAyByBA,eAzBzB,EA0B2ClD,KAAKP,MAA/CgI,EA1BD,EA0BCA,aAAcC,EA1Bf,EA0BeA,aAAcC,EA1B7B,EA0B6BA,UAClB9E,EAAiB7C,KAAKP,MAAhCoC,QAAUgB,YACZC,EAAuBD,EAC1B,UAAGA,EAAY0I,WAAa,EAA5B,YAAiC1I,EAAY2I,UAA7C,YAA0D3I,EAAY4I,eAAtE,WACK5I,EAAY6I,mBAAmB,UACrC,IAEF,OACE,0BAAMC,SAAU3L,KAAK0K,cACnB,uDAAyBxI,IACzB,+BACE,+BACE,4BACE,4CACA,4BACE,8BACE0J,KAAM,EACNC,KAAM,GACNxO,KAAK,cACLS,MAAOuF,EACP9C,SAAUP,KAAKO,aAIrB,4BACE,wCACA,4BACE,kBAAC,GAAD,CACElD,KAAK,cACLS,MAAOwJ,EACP/G,SAAUP,KAAKO,SACfwJ,iBAAkB/J,KAAK+J,iBACvB3L,IAAK8D,MAIX,4BACE,wCACA,4BACIY,IAGN,4BACE,2CACA,4BACE,kBAAC,GAAD,CACEzF,KAAK,iBACLS,MAAOoF,EACP3C,SAAUP,KAAKO,SACfwJ,iBAAkB/J,KAAK+J,iBACvB3L,IAAK8D,MAIX,4BACE,yCACA,4BACE,kBAAC,GAAD,CACE7E,KAAK,WACLS,MAAO4B,EACPa,SAAUP,KAAKO,SACfnC,IAAK8D,MAKX,4BACE,yCACA,4BACE,4BAAQ7E,KAAK,WAAWS,MAAOmD,EAAUV,SAAUP,KAAKO,UACtD,4BAAQzC,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,YAKN,4BACE,4CACA,4BACE,8BACE8N,KAAM,EACNC,KAAM,GACNxO,KAAK,cACLS,MAAOuJ,EACP9G,SAAUP,KAAKO,aAIrB,4BACE,6BACA,4BAAI,4BAAQG,KAAK,UAAb,cAIT4K,EACD,kBAACQ,GAAA,EAAD,CAAMlI,GAAE,oBAAe1B,EAAK,IAA5B,gBAEI,kBAAC,GAAD,CACIkE,QAASqB,EACTpB,UAAWrG,KAAK6H,aAChBpH,QAASkH,GAERD,Q,GAjPwB7G,IAAMC,W,slDCL1BiL,G,sQAKjB,WAAY9L,GAAO,O,4FAAA,SACf,cAAMA,GACN,IAAM+L,EAAW1B,GAAME,YAAcF,GAAME,YAAYyB,MAAQ,KAFhD,cAGR3B,GAAME,YACb,EAAK/K,MAAQ,CAAEuM,YAJA,E,2LAHIrH,GAAa,iB,cAA1B3J,E,yBACCA,G,oQAUS,MADKgF,KAAKP,MAAlBuM,S,gCAEeD,EAAMX,Y,OAAnBpQ,E,OACNgF,KAAKG,SAAS,CAAE6L,SAAUhR,EAAKiR,Q,4HAG9B,IACGD,EAAahM,KAAKP,MAAlBuM,SACR,OACI,yBAAK7B,UAAU,eACX,6DACA,4BACK6B,Q,GAxBcnL,IAAMC,WCA1BoL,OAHf,WACE,OAAO,+C,k7CCMYC,G,4QAEjB,WAAYlM,GAAO,a,4FAAA,UACf,cAAMA,IACDyK,aAAe,EAAKA,aAAarM,KAAlB,OAFL,E,gFAOA6B,G,+FACfA,EAAE0C,iBACIwJ,EAAOC,SAASC,MAAMC,cAGtBC,EAAO,CACTC,SAAUL,EAAKK,SAAS3O,MACxB4O,SAAUN,EAAKM,SAAS5O,MACxB6O,KAAMP,EAAKQ,QAAQ9O,O,SAWJ6G,G,0IAAoB,CAAE6H,S,eAErCxM,KAAKG,SAAS,CAAE0M,gBAAgB,IAEpCT,EAAKK,SAAS3O,MAAQ,GACtBsO,EAAKM,SAAS5O,MAAQ,G,+SAO1B,OACM,0BAAM6N,SAAU3L,KAAK0K,aAAcrN,KAAK,iBACpC,kBAACyP,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACT,kBAACC,GAAA,EAAD,4BACA,kBAACC,GAAA,EAAD,CAAaxM,KAAK,OAAOrD,KAAK,WAAWgN,YAAY,aACrD,kBAAC6C,GAAA,EAAD,CAAaxM,KAAK,WAAWrD,KAAK,WAAWgN,YAAY,aACrD,kBAAC8C,GAAA,EAAD,KACI,kBAAC5L,EAAA,EAAD,CAAmB6L,WAAS,EAAC1M,KAAK,QAAQrD,KAAK,UAAUgQ,aAAc,QACnE,kBAAC5L,EAAA,EAAD,CAAcpE,KAAK,QAAQS,MAAO,SAAlC,SACA,kBAAC2D,EAAA,EAAD,CAAc3D,MAAO,QAArB,eAGR,kBAAC0C,EAAA,EAAD,CAAQE,KAAK,UAAb,kB,gCArDqBG,IAAMC,W,q1CA6DjDqL,GAAcmB,UAAY,CACtBC,QAASC,KAAUC,M,ICvDFC,G,4QAEnB,WAAYzN,GAAO,a,4FAAA,UACjB,cAAMA,IACDyK,aAAe,EAAKA,aAAarM,KAAlB,OAFH,E,gFAMA6B,G,iGACjBA,EAAE0C,iBACIwJ,EAAOC,SAASC,MAAMqB,UAGxBlB,EAAWL,EAAKK,SAAS3O,MACzB4O,EAAWN,EAAKM,SAAS5O,M,SASV6G,G,8IAAoB,CAAE8H,WAAUC,a,OAEjC,O,OAATF,KACPrB,MAAM,mBAGNA,MAAM,iBAERiB,EAAKK,SAAS3O,MAAQ,GACtBsO,EAAKM,SAAS5O,MAAQ,G,2SAId2O,GACRzM,KAAKP,MAAQ,CAAEmO,eAAe,K,+BAK9B,OACI,0BAAMjC,SAAU3L,KAAK0K,aAAcrN,KAAK,aACtC,kBAACyP,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACE,GAAA,EAAD,CAAaxM,KAAK,OAAOrD,KAAK,WAAWgN,YAAY,aACrD,kBAAC6C,GAAA,EAAD,CAAaxM,KAAK,WAAWrD,KAAK,WAAWgN,YAAY,aACzD,4BAAQwD,OAAO,UAAf,kB,gCAhDqBhN,IAAMC,W,yzCCA1BgN,GARA,CACX,CAAE/E,KAAM,YAAaC,UAAWxB,IAChC,CAAEuB,KAAM,YAAaC,UAAWuB,IAChC,CAAExB,KAAM,UAAWC,UCRR,WACb,OACE,6BACE,+EDMF,CAAED,KAAM,SAAUC,UAAW+C,IAC7B,CAAEhD,KAAM,WAAYC,U,6WEHhB,OACI,6BACI,kBAAC+E,EAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAMC,iBAAkB,QAAS/L,GAAG,QAChC,kBAACgM,GAAA,EAAD,CAAKC,SAAU,SAAUC,MAAM,kBAC3B,iDACA,kBAAC,GAAD,OAEJ,kBAACF,GAAA,EAAD,CAAKC,SAAU,QAASC,MAAM,UAC1B,2DACA,kBAAC,GAAD,CAAOxH,MAAO,CAACyH,UAAW,uB,gCAbHxN,IAAMC,YFOrD,CAAEiI,KAAM,IAAKC,UAAWkD,K,26CGRPoC,G,wQAEjB,WAAYrO,GAAO,a,4FAAA,UACf,cAAMA,IACDR,MAAQ,CAAEmO,eAAe,GAFf,E,8CAMf,OACI,kBAACW,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUC,OAAK,EAACC,KAAK,IAAI9K,GAAG,cAC3BkK,GAAO9J,KAAI,SAAA2K,GAAK,OAAI,kBAAC7F,EAAA,EAAD,MAAW6F,EAAX,CAAkBvQ,IAAKuQ,EAAM5F,iB,gCAX5BlI,IAAMC,W,62CCKtC8N,G,4QACJ,WAAY3O,GAAO,a,4FAAA,UACjB,cAAMA,IACDR,MAAQ,CACX2G,SAAS,GAEX,EAAKyI,UAAY,EAAKA,UAAUxQ,KAAf,OACjB,EAAKyQ,UAAY,EAAKA,UAAUzQ,KAAf,OACjB,EAAKqM,aAAe,EAAKA,aAAarM,KAAlB,OAPH,E,iDAWjB2B,KAAKG,SAAS,CAAEiG,SAAS,M,kCAIzBpG,KAAKG,SAAS,CAAEiG,SAAS,M,iEAGRlG,G,mGACjBA,EAAE0C,iBACF5C,KAAK8O,YAEC1C,EAAOC,SAASC,MAAMyC,WACtBrP,EAAW0H,SAASgF,EAAK1M,SAAS5B,OAGlCoF,EAAkBkJ,EAAKlJ,eAAepF,MACxC,IAAI4G,KAAK0H,EAAKlJ,eAAepF,MAAQ,IAAMsO,EAAK4C,eAAelR,OAC/D,IAAI4G,MAAK,IAAIA,MAAOuF,UAAY,OAC9BpI,EAAU,CACdwB,YAAa+I,EAAK/I,YAAYvF,MAC9B4B,SAAU6J,MAAM7J,GAAY,EAAIA,EAChC4H,YAAa,IAAI5C,MAAK,IAAIA,MAAOuF,UAAY,OAC7ChJ,SAAUmL,EAAKnL,SAASnD,MACxBuJ,YAAa+E,EAAK/E,YAAYvJ,MAC9BoF,kB,SASiByB,G,qHAAoB,CAAE9C,Y,eAInB7B,KAAKC,MAAjBI,QACAvE,KAAR,K,+SAIK,IACCsK,EAAYpG,KAAKP,MAAjB2G,QACF6I,EAAoB,IAAIvK,MAC5B,IAAIA,MAAOuF,UAAY,OAAqBjH,eAAeC,OAAO,EAAG,GAEvE,OACE,kBAAC,IAAMsF,SAAP,KACE,kBAAC2G,EAAA,EAAD,CAASvO,QAASX,KAAK6O,WACrB,kBAACvL,GAAA,EAAD,CACEjB,UAAU,OACVkB,UAAW,IACXC,QAAS,kBAACpB,EAAA,EAAD,CAASF,GAAG,aAAZ,gBAET,kBAACwB,GAAA,EAAD,CAAWC,MAAM,WAGrB,kBAACwL,GAAA,EAAD,CAAOC,UAAQ,EAACC,KAAMjJ,EAASkJ,OAAQtP,KAAK8O,WAC1C,kBAACK,GAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,GAAA,EAAMzG,MAAP,yBAEF,kBAACyG,GAAA,EAAMvG,KAAP,KACE,kBAAC6G,GAAA,EAAD,CAAMpS,KAAK,cACT,kBAACyP,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,uBACA,kBAACC,GAAA,EAAD,CAAa7P,KAAK,cAAcqD,KAAK,UAEvC,kBAACoM,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,mBACA,kBAACC,GAAA,EAAD,CAAa7P,KAAK,WAAWqD,KAAK,YAEpC,kBAACoM,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,0BACA,kBAACC,GAAA,EAAD,CACE7P,KAAK,iBACLqD,KAAK,OACL5C,OAAO,IAAI4G,MAAOgF,cAAczG,OAAO,EAAG,MAE5C,kBAACiK,GAAA,EAAD,CACE7P,KAAK,iBACLqD,KAAK,OACL5C,MAAOmR,KAGX,kBAACnC,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,mBACA,kBAACC,GAAA,EAAD,CAAa7P,KAAK,WAAWqS,eAAe,SAASrF,YAAY,UAC/D,4BAAQvM,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,WAGJ,kBAACgP,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,oBACA,kBAACC,GAAA,EAAD,CAAa7P,KAAK,cAAcqS,eAAe,WAAWrF,YAAY,2BAI5E,kBAAC8E,GAAA,EAAMQ,OAAP,KACE,kBAACxC,GAAA,EAAD,KACE,kBAAC3M,EAAA,EAAD,CACEE,KAAK,SACLD,QAAQ,UACRE,QAASX,KAAK0K,cAHhB,UAOA,kBAAClK,EAAA,EAAD,CAAQC,QAAQ,OAAOE,QAASX,KAAK8O,WAArC,mB,gCA3HcjO,IAAMC,WAoInBC,eAAW6N,I,qzCCpI1B,SAASgB,KACP,OACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAON,OAAR,KACE,kBAACM,EAAA,EAAOC,MAAR,2BAGF,kBAACC,EAAA,EAAD,KACE,kBAAC,gBAAD,CAAetB,OAAK,EAAC7K,GAAG,KAAI,kBAACsL,EAAA,EAAD,cAE5B,kBAAC,gBAAD,CAAetL,GAAG,UAAS,kBAACoM,EAAA,EAAD,eAE3B,kBAAC,gBAAD,CAAepM,GAAG,YAAW,kBAACsL,EAAA,EAAD,iBAE7B,kBAAC,gBAAD,CAAetL,GAAG,aAAY,kBAACsL,EAAA,EAAD,8BAKhC,kBAACa,EAAA,EAAD,CAAKE,WAAS,GACZ,kBAAC,GAAD,Q,IAMaC,G,6WAGjB,OACE,6BACE,kBAACN,GAAD,CAAQhC,cAAe5N,KAAKC,MAAM2N,gBAClC,kBAACG,EAAA,EAAD,CAAMoC,OAAK,GACT,kBAAC,GAAD,a,gCAPwBtP,IAAMC,WC5BxCwJ,GAAME,YAAc7L,OAAOyR,iBAE3B,IAAMC,GACJ,kBAAC,IAAD,KACE,kBAAC,GAAD,OAIJC,IAASC,QAAQF,GAAShE,SAASmE,eAAe","file":"app.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([251,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// import the library\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\n// import your icons\r\nimport { faBirthdayCake,faCookieBite, faStroopwafel, faBreadSlice } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(\r\n    faBirthdayCake,\r\n    faCookieBite,\r\n    faStroopwafel,\r\n    faBreadSlice,\r\n    // more icons go here\r\n);\r\n","/* eslint \"react/prefer-stateless-function\": \"off\" */\r\n\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport URLSearchParams from 'url-search-params';\r\nimport './fontawesome';\r\n\r\nclass QuantityFilter extends React.Component {\r\n\r\n  constructor({ location: { search } }) {\r\n    super();\r\n    const params = new URLSearchParams(search);\r\n    this.state = {\r\n      quantity: params.get('quantity') || '',\r\n      changed: false,\r\n    };\r\n\r\n    this.onChangeQuantityStatus = this.onChangeQuantityStatus.bind(this);\r\n    this.applyFilter = this.applyFilter.bind(this);\r\n    this.showOriginalFilter = this.showOriginalFilter.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { location: { search: prevSearch } } = prevProps;\r\n    const { location: { search } } = this.props;\r\n    if (prevSearch !== search) {\r\n      this.showOriginalFilter();\r\n    }\r\n  }\r\n\r\n  onChangeQuantityStatus(e) {\r\n    this.setState({ quantity: e.target.value, changed: true });\r\n  }\r\n\r\n  showOriginalFilter() {\r\n    const { location: { search } } = this.props;\r\n    const params = new URLSearchParams(search);\r\n    this.setState({\r\n      quantity: params.get('quantity') || '',\r\n      changed: false,\r\n    });\r\n  }\r\n\r\n  applyFilter() {\r\n    const { quantity } = this.state;\r\n    const { history } = this.props;\r\n    history.push({\r\n      pathname: '/products',\r\n      search: quantity ? `?quantity=${quantity}` : '',\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  // TODO: replace select with React component for slider or selector\r\n  // TODO: replace hard coded values; incorporate lte or gte...?\r\n  render() {\r\n    const { quantity, changed } = this.state;\r\n    return (\r\n        <div>\r\n          <div>\r\n            Filter by quantity:\r\n            {' '}\r\n            <select value={quantity} onChange={this.onChangeQuantityStatus}>\r\n              <option value=\"\">(All Products)</option>\r\n              <option value=\"1\">Low Stock (1)</option>\r\n              <option value=\"0\">Out of Stock (0)</option>\r\n            </select>\r\n            {' '}\r\n            <Button bsStyle=\"primary\" type=\"button\" onClick={this.applyFilter}>\r\n              Apply\r\n            </Button>\r\n            {' '}\r\n            <Button type=\"button\" onClick={this.showOriginalFilter} disabled={!changed}>\r\n              Reset\r\n            </Button>\r\n\r\n          </div>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(QuantityFilter);\r\n","import React from \"react\";\r\nimport URLSearchParams from \"url-search-params\";\r\nimport {ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass CategoryFilter extends React.Component {\r\n\r\n    constructor({ location: { search } }) {\r\n        super();\r\n        const params = new URLSearchParams(search);\r\n        this.state = {\r\n            category: params.getAll('category') || '',\r\n        };\r\n\r\n        this.onChangeStatus = this.onChangeStatus.bind(this);\r\n        this.showOriginalFilter = this.showOriginalFilter.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { location: { search: prevSearch } } = prevProps;\r\n        const { location: { search } } = this.props;\r\n        if (prevSearch !== search) {\r\n            //this.showOriginalFilter();\r\n        }\r\n    }\r\n\r\n    showOriginalFilter() {\r\n        const { location: { search } } = this.props;\r\n        const params = new URLSearchParams(search);\r\n        this.setState({\r\n            category: params.get('category') || '',\r\n        });\r\n    }\r\n\r\n    onChangeStatus(e) {\r\n        // If there are no categories selected, then initialize a new array.\r\n        let newCategories;\r\n        if (this.state.categories === undefined) {\r\n            newCategories = [e];\r\n        }\r\n\r\n        // If there is already a category, add this one into the array.\r\n        else {\r\n            newCategories = this.state.categories.push(e);\r\n        }\r\n\r\n        // Update the state of the array (add the category).\r\n        this.setState({\r\n            category: newCategories\r\n        });\r\n\r\n        const { history } = this.props;\r\n        const { category } = this.state;\r\n\r\n        // Update the query param.\r\n        history.push({\r\n            pathname: '/products',\r\n            search: `?category=${e}`,\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { category } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                Filter by category:\r\n                <ToggleButtonGroup size=\"large\"\r\n                                   type=\"checkbox\"\r\n                                   onChange={this.onChangeStatus}>\r\n                    <ToggleButton value=\"Cake\">\r\n                        <FontAwesomeIcon icon={['fas', 'birthday-cake']} />\r\n                        {' '}\r\n                        Cakes & Muffins\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"Cookie\">\r\n                        <FontAwesomeIcon icon={['fas', 'cookie-bite']} />\r\n                        {' '}\r\n                        Cookies\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"Pastry\">\r\n                        <FontAwesomeIcon icon={['fas', 'stroopwafel']} />\r\n                        {' '}\r\n                        Pastries\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"Other\">\r\n                        <FontAwesomeIcon icon={['fas', 'bread-slice']} />\r\n                        {' '}\r\n                        Savory\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(CategoryFilter);\r\n","import React from \"react\";\r\nimport ProductFilter from \"./QuantityFilter.jsx\";\r\nimport CategoryFilter from \"./CategoryFilter.jsx\";\r\n\r\n\r\nexport default class Filters extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProductFilter/>\r\n                <CategoryFilter/>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Button, Glyphicon, Tooltip, OverlayTrigger, Table,\r\n} from 'react-bootstrap';\r\n\r\n/**\r\n * Represent a product listing in the table: \"one row\".\r\n */\r\nconst InventoryRow = withRouter(({\r\n  product, location: { search }, deleteProduct, updateProduct, index,\r\n}) => {\r\n  const selectLocation = { pathname: `/products/${product.id}`, search };\r\n  const editTooltip = (\r\n    <Tooltip id=\"close-tooltip\" placement=\"top\">Edit Inventory</Tooltip>\r\n  );\r\n  const deleteTooltip = (\r\n    <Tooltip id=\"delete-tooltip\" placement=\"top\">Delete Inventory</Tooltip>\r\n  );\r\n  const smUpdateTooltip = (\r\n    <Tooltip id=\"small-update-tooltip\" placement=\"top\">+1</Tooltip>\r\n  )\r\n  const lgUpdateTooltip = (\r\n    <Tooltip id=\"large-update-tooltip\" placement=\"top\">+5</Tooltip>\r\n  )\r\n  const minUpdateTooltip = (\r\n    <Tooltip id=\"minus-update-tooltip\" placement=\"top\">-1</Tooltip>\r\n  )\r\n\r\n  const smallUpdateAmt = 1;\r\n  const largeUpdateAmt = 5;\r\n  const decrUpdateAmt = -1;\r\n\r\n  function onDelete(e) {\r\n    e.preventDefault();\r\n    deleteProduct(index);\r\n  }\r\n\r\n  function quickUpdate(e, incrAmt) {\r\n    e.preventDefault();\r\n    updateProduct(index, incrAmt);\r\n  }\r\n\r\n  const updatedDate = product.updatedDate;\r\n  const formattedUpdatedDate = updatedDate \r\n    ? updatedDate.toDateString() + ' ' + updatedDate.toTimeString().substr(0,8)\r\n    : ' ';\r\n  const expirationDate = product.expirationDate;\r\n  const formattedExpiration = expirationDate\r\n    ? expirationDate.toDateString() + ' ' + expirationDate.toTimeString().substr(0,8) \r\n    : ' ';\r\n\r\n  const tableRow = (\r\n    <tr>\r\n      <td>{product.id}</td>\r\n      <td>{product.description}</td>\r\n      <td>{product.category}</td>\r\n      <td>{formattedUpdatedDate}</td>\r\n      <td>{formattedExpiration}</td>\r\n      <td>{product.quantity}</td>\r\n      <td>\r\n        <OverlayTrigger delayShow={1000} overlay={smUpdateTooltip}>\r\n          <Button bsSize=\"xsmall\" onClick={e => quickUpdate(e, smallUpdateAmt)}>\r\n            <Glyphicon glyph=\"plus\" />\r\n          </Button>\r\n        </OverlayTrigger>\r\n        <OverlayTrigger delayShow={1000} overlay={lgUpdateTooltip}>\r\n          <Button bsSize=\"xsmall\" onClick={e => quickUpdate(e, largeUpdateAmt)}>\r\n            <Glyphicon glyph=\"plus-sign\" />\r\n          </Button>\r\n        </OverlayTrigger>\r\n        <OverlayTrigger delayShow={1000} overlay={minUpdateTooltip}>\r\n          <Button bsSize=\"xsmall\" onClick={e => quickUpdate(e, decrUpdateAmt)}>\r\n            <Glyphicon glyph=\"minus\" />\r\n          </Button>\r\n        </OverlayTrigger>\r\n        {' '}\r\n        <LinkContainer to={`/edit/${product.id}`}>\r\n          <OverlayTrigger delayShow={1000} overlay={editTooltip}>\r\n            <Button bsSize=\"xsmall\">\r\n              <Glyphicon glyph=\"edit\" />\r\n            </Button>\r\n          </OverlayTrigger>\r\n        </LinkContainer>\r\n        {' '}\r\n        <OverlayTrigger delayShow={1000} overlay={deleteTooltip}>\r\n          <Button bsSize=\"xsmall\" onClick={onDelete}>\r\n            <Glyphicon glyph=\"trash\" />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      </td>\r\n    </tr>\r\n  );\r\n  return (\r\n    <LinkContainer to={selectLocation}>\r\n      {tableRow}\r\n    </LinkContainer>\r\n  );\r\n});\r\n\r\n\r\n/**\r\n * Return all the products in a table.\r\n */\r\nexport default function InventoryTable({ inventory, deleteProduct, updateProduct }) {\r\n  const inventoryRows = inventory.map((product, index) => (\r\n    <InventoryRow\r\n      key={product.id}\r\n      product={product}\r\n      deleteProduct={deleteProduct}\r\n      updateProduct={updateProduct}\r\n      index={index}\r\n    />\r\n  ));\r\n  \r\n  return (\r\n    <Table bordered condensed hover responsive>\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Description</th>\r\n          <th>Category</th>\r\n          <th>Last Updated</th>\r\n          <th>Expiration Date</th>\r\n          <th>Quantity</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {inventoryRows}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n","import fetch from 'isomorphic-fetch';\r\n\r\nconst dateRegex = new RegExp('^\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d');\r\n\r\nfunction jsonDateReviver(key, value) {\r\n  if (dateRegex.test(value)) return new Date(value); return value;\r\n}\r\n\r\nexport default async function graphQLFetch(query, variables = {}, showError = null) {\r\n  const apiEndpoint = (__isBrowser__) // eslint-disable-line no-undef\r\n    ? window.ENV.UI_API_ENDPOINT\r\n    : process.env.UI_SERVER_API_ENDPOINT;\r\n  try {\r\n    const response = await fetch(apiEndpoint, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ query, variables }),\r\n    });\r\n    const body = await response.text();\r\n    const result = JSON.parse(body, jsonDateReviver);\r\n\r\n    if (result.errors) {\r\n      const error = result.errors[0];\r\n      if (error.extensions.code === 'BAD_USER_INPUT') {\r\n        const details = error.extensions.exception.errors.join('\\n ');\r\n          if (showError) showError(`${error.message}:\\n ${details}`);\r\n      } else if (showError) {\r\n          showError(`${error.extensions.code}: ${error.message}`);\r\n      }\r\n    }\r\n    return result.data;\r\n  } catch (e) {\r\n      if (showError) showError(`Error in sending data to server: ${e.message}`);\r\n    return null;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Alert, Collapse } from 'react-bootstrap';\r\nexport default class Toast extends React.Component {\r\n  componentDidUpdate() {\r\n    const { showing, onDismiss } = this.props;\r\n    if (showing) {\r\n      clearTimeout(this.dismissTimer);\r\n      this.dismissTimer = setTimeout(onDismiss, 5000);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearTimeout(this.dismissTimer);\r\n  }\r\n  render() {\r\n    const {\r\n      showing, bsStyle, onDismiss, children,\r\n    } = this.props;\r\n    return (\r\n      <Collapse in={showing}>\r\n        <div style={{ position: 'fixed', bottom: 20, left: 20 }}>\r\n          <Alert bsStyle={bsStyle} onDismiss={onDismiss}>\r\n            {children}\r\n          </Alert>\r\n        </div>\r\n      </Collapse>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport graphQLFetch from './graphQLFetch.js';\r\n\r\nexport default class ProductInformation extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { product: {} };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { match: { params: { id: prevId } } } = prevProps;\r\n    const { match: { params: { id } } } = this.props;\r\n    if (prevId !== id) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    const { match: { params: { id } } } = this.props;\r\n    const query = `query product($id: Int!) {\r\n      product (id: $id) {\r\n        id information createdDate\r\n      }\r\n    }`;\r\n\r\n    const data = await graphQLFetch(query, { id: parseInt(id, 10) });\r\n    if (data) {\r\n      this.setState({ product: data.product });\r\n    } else {\r\n      this.setState({ product: {} });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { product: { information, createdDate } } = this.state;\r\n    const formattedCreated = createdDate \r\n    ? createdDate.toDateString() + ' ' + createdDate.toTimeString().substr(0,8)\r\n    : ' ';\r\n    return (\r\n      <div>\r\n        <h3>Information:</h3>\r\n        <pre>Details: {information}</pre>\r\n        <pre>Date created: {formattedCreated}</pre>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Button, Glyphicon, Tooltip, OverlayTrigger,\r\n} from 'react-bootstrap';\r\nimport { Table } from \"reactable\";\r\n\r\n/**\r\n * Implement inventory data with Reactable.\r\n */\r\n\r\nvar Sample = Table;\r\n\r\nconst inventoryRow = (product, index) => {\r\n  return (\r\n    { ID: product.id, \r\n      Name: product.description,\r\n      Category: product.category, \r\n      Quantity: product.quantity,\r\n      \"Created Date\": (product.createdDate ? product.createdDate.toDateString() : ' ')\r\n    }\r\n  )\r\n}\r\n\r\n\r\nexport default function InventoryTableComp({ inventoryL, updateProduct }) {\r\n\r\n  const inventoryRows = inventoryL.map((product, index) => (\r\n    inventoryRow(product, index)\r\n  ));\r\n  return (\r\n    <Sample \r\n      className=\"table\"\r\n      data={inventoryRows}\r\n      itemsPerPage={4}\r\n      pageButtonLimit={5}\r\n      noDataText=\"No matching records found.\"\r\n      filterable={['Category', 'Name', 'ID']}\r\n    />\r\n  )\r\n};","import React from 'react';\r\nimport URLSearchParams from 'url-search-params';\r\nimport { Route } from 'react-router-dom';\r\nimport { Panel } from 'react-bootstrap';\r\n\r\nimport Filters from './Filters.jsx';\r\nimport InventoryTable from './InventoryTable.jsx';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport Toast from './Toast.jsx';\r\nimport ProductInformation from './ProductInformation.jsx';\r\nimport InventoryTableComp from './InventoryTableComp.jsx'\r\n\r\n\r\n/**\r\n * Represent overall inventory list in webpage.\r\n */\r\nexport default class InventoryList extends React.Component {\r\n  constructor() {\r\n    super();\r\n      this.state = {\r\n          inventory: [],\r\n          toastVisible: false,\r\n          toastMessage: ' ',\r\n          toastType: 'info',\r\n      };\r\n      this.deleteProduct = this.deleteProduct.bind(this);\r\n      this.showSuccess = this.showSuccess.bind(this);\r\n      this.showError = this.showError.bind(this);\r\n      this.dismissToast = this.dismissToast.bind(this);\r\n  }\r\n\r\n  // Pg 64\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  // pg 245\r\n  componentDidUpdate(prevProps) {\r\n    const { location: { search: prevSearch } } = prevProps;\r\n    const { location: { search } } = this.props;\r\n    if (prevSearch !== search) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  // Pg 64\r\n  async loadData() {\r\n    const { location: { search } } = this.props;\r\n    const params = new URLSearchParams(search);\r\n    const queryVariables = {};\r\n    if (params.get('quantity')) queryVariables.quantity = parseInt(params.get('quantity'), 10);\r\n    if (params.get('category')) queryVariables.category = params.get('category').split(',');\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log('Loading data....');\r\n\r\n    // Pg 105\r\n    const query = `query productList($quantity: Int) {\r\n      productList(quantity: $quantity) {\r\n        id description createdDate\r\n        expirationDate quantity category\r\n      }\r\n    }`;\r\n\r\n      const data = await graphQLFetch(query, vars, queryVariables, this.showError);\r\n    if (data) {\r\n      // eslint-disable-next-line no-console\r\n      console.log('Data retrieved from server.');\r\n      this.setState({ inventory: data.productList });\r\n    }\r\n    else {\r\n      console.log(\"Query returned no data/error.\");\r\n    }\r\n  }\r\n\r\n  // need to revise async delete\r\n  async deleteProduct(index) {\r\n    const query = `mutation productDelete($id: Int!) {\r\n      productDelete(id: $id)\r\n    }`;\r\n    const { inventory } = this.state;\r\n    // console.log(inventory);\r\n    const { location: { pathname, search }, history } = this.props;\r\n      const { id } = inventory[index];\r\n      const data = await graphQLFetch(query, { id: parseInt(id, 10) }, this.showError);\r\n    if (data && data.productDelete) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.inventory];\r\n        if (pathname === `/products/${id}`) {\r\n          history.push({ pathname: '/products', search });\r\n        }\r\n        newList.splice(index, 1);\r\n        return { inventory: newList };\r\n      });\r\n        this.showSuccess(`Deleted product ${id} successfully.`);\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { inventory } = this.state;\r\n    const { match } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Panel>\r\n          <Panel.Heading>\r\n            <Panel.Title toggle>Filter</Panel.Title>\r\n          </Panel.Heading>\r\n          <Panel.Body collapsible>\r\n            <Filters />\r\n          </Panel.Body>\r\n        </Panel>\r\n        <hr />\r\n        <InventoryTable inventory={inventory} deleteProduct={this.deleteProduct} updateProduct={this.updateProduct} />\r\n        <hr />\r\n        <Route path={`${match.path}/:id`} component={ProductInformation} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nfunction format(num) {\r\n  return num != null ? num.toString() : '';\r\n}\r\n\r\nfunction unformat(str) {\r\n  const val = parseInt(str, 10);\r\n  return Number.isNaN(val) ? null : val;\r\n}\r\n\r\nexport default class NumInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: format(props.value) };\r\n    this.onBlur = this.onBlur.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    if (e.target.value.match(/^\\d*$/)) {\r\n      this.setState({ value: e.target.value });\r\n    }\r\n  }\r\n\r\n  onBlur(e) {\r\n    const { onChange } = this.props;\r\n    const { value } = this.state;\r\n    onChange(e, unformat(value));\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        {...this.props}\r\n        value={value}\r\n        onBlur={this.onBlur}\r\n        onChange={this.onChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nfunction displayFormat(date) {\r\n  return (date != null) ? date.toDateString() : '';\r\n}\r\n\r\nfunction editFormat(date) {\r\n  return (date != null) ? date.toISOString().substr(0, 10) : '';\r\n}\r\n\r\nfunction unformat(str) {\r\n  const val = new Date(str);\r\n  return Number.isNaN(val.getTime()) ? null : val;\r\n}\r\n\r\nexport default class DateInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: editFormat(props.value),\r\n      focused: false,\r\n      valid: true,\r\n    };\r\n    this.onFocus = this.onFocus.bind(this);\r\n    this.onBlur = this.onBlur.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onFocus() {\r\n    this.setState({ focused: true });\r\n  }\r\n\r\n  onBlur(e) {\r\n    const { value, valid: oldValid } = this.state;\r\n    const { onValidityChange, onChange } = this.props;\r\n    const dateValue = unformat(value);\r\n    const valid = value === '' || dateValue != null;\r\n    if (valid !== oldValid && onValidityChange) {\r\n      onValidityChange(e, valid);\r\n    }\r\n    this.setState({ focused: false, valid });\r\n    if (valid) onChange(e, dateValue);\r\n  }\r\n\r\n  onChange(e) {\r\n    if (e.target.value.match(/^[\\d-]*$/)) {\r\n      this.setState({ value: e.target.value });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { valid, focused, value } = this.state;\r\n    const { value: origValue, name } = this.props;\r\n    const className = (!valid && !focused) ? 'invalid' : null;\r\n    const displayValue = (focused || !valid) ? value\r\n      : displayFormat(origValue);\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        size={20}\r\n        name={name}\r\n        className={className}\r\n        value={displayValue}\r\n        placeholder={focused ? 'yyyy-mm-dd' : null}\r\n        onFocus={this.onFocus}\r\n        onBlur={this.onBlur}\r\n        onChange={this.onChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","const store = {};\r\nexport default store;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport NumInput from './NumInput.jsx';\r\nimport DateInput from './DateInput.jsx';\r\nimport Toast from './Toast.jsx';\r\nimport store from './store.js';\r\n\r\nexport default class ProductEdit extends React.Component {\r\n    static async fetchData(match, showError) {\r\n        const query = `query product($id: Int!) {\r\n      product(id: $id) {\r\n        id description createdDate expirationDate\r\n        quantity category information updatedDate\r\n      }\r\n    }`;\r\n        const { params: { id } } = match;\r\n        const result = await graphQLFetch(query, { id: parseInt(id, 10) }, showError);\r\n        return result;\r\n    }\r\n    constructor() {\r\n        super();\r\n        const product = store.initialData ? store.initialData.product : null;\r\n        delete store.initialData;\r\n        this.state = {\r\n            product,\r\n            invalidFields: {},\r\n            toastVisible: false,\r\n            toastMessage: ' ',\r\n            toastType: 'success',\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onValidityChange = this.onValidityChange.bind(this);\r\n        this.showSuccess = this.showSuccess.bind(this);\r\n        this.showError = this.showError.bind(this);\r\n        this.dismissToast = this.dismissToast.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { product } = this.state;\r\n        if (product == null) this.loadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { match: { params: { id: prevId } } } = prevProps;\r\n        const { match: { params: { id } } } = this.props;\r\n        if (id !== prevId) {\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    onChange(event, naturalValue) {\r\n        const { name, value: textValue } = event.target;\r\n        const value = naturalValue === undefined ? textValue : naturalValue;\r\n        this.setState(prevState => ({\r\n            product: { ...prevState.product, [name]: value },\r\n        }));\r\n    }\r\n\r\n    onValidityChange(event, valid) {\r\n        const { name } = event.target;\r\n        this.setState((prevState) => {\r\n            const invalidFields = { ...prevState.invalidFields, [name]: !valid };\r\n            if (valid) delete invalidFields[name];\r\n            return { invalidFields };\r\n        });\r\n    }\r\n\r\n    async handleSubmit(e) {\r\n        e.preventDefault();\r\n        const { product, invalidFields } = this.state;\r\n        if (Object.keys(invalidFields).length !== 0) return;\r\n        const query = `mutation productUpdate(\r\n      $id: Int!\r\n      $changes: ProductUpdateInputs!\r\n    ) {\r\n      productUpdate(\r\n        id: $id\r\n        changes: $changes\r\n      ) {\r\n        id description createdDate expirationDate \r\n        quantity category information updatedDate\r\n      }\r\n    }`;\r\n        const { id, created, ...changes } = product;\r\n        changes[\"updatedDate\"] = new Date(new Date().getTime() + 1000 * 60 * 60 * 24 * 10);\r\n        const data = await graphQLFetch(query, { changes, id: parseInt(id, 10) }, this.showError);\r\n        if (data) {\r\n            this.setState({ product: data.productUpdate });\r\n            alert('Updated product successfully'); // eslint-disable-line no-alert\r\n        }\r\n\r\n    }\r\n  async loadData() {\r\n    const { match } = this.props;\r\n    const data = await ProductEdit.fetchData(match, null, this.showError);\r\n    this.setState({ product: data ? data.product : {}, invalidFields: {} });\r\n    }\r\n\r\n    showSuccess(message) {\r\n        this.setState({\r\n            toastVisible: true, toastMessage: message, toastType: 'danger',\r\n        });\r\n    }\r\n\r\n    showError(message) {\r\n        this.setState({\r\n        toastVisible: true, toastMessage: message, toastType: 'success',\r\n                  });\r\n            }\r\n\r\n        dismissToast() {\r\n            this.setState({ toastVisible: false });\r\n        }\r\n\r\n\r\n  render() {\r\n    const { product } = this.state;\r\n    if (product === null) return null;\r\n    const { product: { id } } = this.state;\r\n    const { match: { params: { id: propsId } } } = this.props;\r\n    if (id === null) {\r\n      if (propsId != null) {\r\n        return <h3>{`Product with ID ${propsId} not found at all.`}</h3>;\r\n      }\r\n      return null;\r\n    }\r\n\r\n    const { invalidFields } = this.state;\r\n    let validationMessage;\r\n\r\n    if (Object.keys(invalidFields).length !== 0) {\r\n      validationMessage = (\r\n        <div className=\"error\">\r\n          Please correct invalid fields before submitting.\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const { product: { description, quantity } } = this.state;\r\n    const { product: { category, information } } = this.state;\r\n    const { product: { createdDate, expirationDate } } = this.state;\r\n    const { toastVisible, toastMessage, toastType } = this.state;\r\n    const { product: {updatedDate} } = this.state;\r\n    const formattedUpdatedDate = updatedDate \r\n    ? (`${updatedDate.getMonth() + 1}/${updatedDate.getDate()}/${updatedDate.getFullYear()}`\r\n      + ` ${updatedDate.toLocaleTimeString('en-US')}`)\r\n    : ' ';\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h3>{`Editing product: ${id}`}</h3>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Description:</td>\r\n              <td>\r\n                <textarea\r\n                  rows={8}\r\n                  cols={50}\r\n                  name=\"description\"\r\n                  value={description}\r\n                  onChange={this.onChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Created:</td>\r\n              <td>\r\n                <DateInput\r\n                  name=\"createdDate\"\r\n                  value={createdDate}\r\n                  onChange={this.onChange}\r\n                  onValidityChange={this.onValidityChange}\r\n                  key={id}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Updated:</td>\r\n              <td>\r\n                 {formattedUpdatedDate}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Expiration:</td>\r\n              <td>\r\n                <DateInput\r\n                  name=\"expirationDate\"\r\n                  value={expirationDate}\r\n                  onChange={this.onChange}\r\n                  onValidityChange={this.onValidityChange}\r\n                  key={id}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Quantity:</td>\r\n              <td>\r\n                <NumInput\r\n                  name=\"quantity\"\r\n                  value={quantity}\r\n                  onChange={this.onChange}\r\n                  key={id}\r\n                />\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>Category:</td>\r\n              <td>\r\n                <select name=\"category\" value={category} onChange={this.onChange}>\r\n                  <option value=\"Muffin\">Muffin</option>\r\n                  <option value=\"Cupcake\">Cupcake</option>\r\n                  <option value=\"Cake\">Cake</option>\r\n                  <option value=\"Cookie\">Cookie</option>\r\n                  <option value=\"Pastry\">Pastry</option>\r\n                  <option value=\"Other\">Other</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>Information:</td>\r\n              <td>\r\n                <textarea\r\n                  rows={8}\r\n                  cols={50}\r\n                  name=\"information\"\r\n                  value={information}\r\n                  onChange={this.onChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td />\r\n              <td><button type=\"submit\">Submit</button></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {validationMessage}\r\n        <Link to={`/products/${id - 1}`}>Back to Home</Link>\r\n       \r\n            <Toast\r\n                showing={toastVisible}\r\n                onDismiss={this.dismissToast}\r\n                bsStyle={toastType}\r\n            >\r\n                {toastMessage}\r\n            </Toast>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport store from './store.js';\r\nimport graphQLFetch from './graphQLFetch.js';\r\n\r\nexport default class About extends React.Component {\r\n    static async fetchData() {\r\n        const data = await graphQLFetch('query {about}');\r\n        return data;\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        const apiAbout = store.initialData ? store.initialData.about : null;\r\n        delete store.initialData;\r\n        this.state = { apiAbout };\r\n    }\r\n    async componentDidMount() {\r\n        const { apiAbout } = this.state;\r\n        if (apiAbout == null) {\r\n            const data = await About.fetchData();\r\n            this.setState({ apiAbout: data.about });\r\n        }\r\n    }\r\n    render() {\r\n        const { apiAbout } = this.state;\r\n        return (\r\n            <div className=\"text-center\">\r\n                <h3>Inventory Tracker version 0.9</h3>\r\n                <h4>\r\n                    {apiAbout}\r\n                </h4>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nfunction NotFound() {\r\n  return <h1>Page Not Found</h1>;\r\n}\r\nexport default NotFound;","/* eslint \"react/prefer-stateless-function\": \"off\" */\r\n\r\nimport React from 'react';\r\nimport { FormGroup, ControlLabel,Button,\r\n    FormControl, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup}  from 'react-bootstrap';\r\nimport PropTypes from \"prop-types\";\r\nimport graphQLFetch from \"./graphQLFetch\";\r\n\r\nexport default class AccountCreate extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n\r\n    async handleSubmit(e) {\r\n        e.preventDefault();\r\n        const form = document.forms.accountCreate;\r\n\r\n\r\n        const user = {\r\n            username: form.username.value,\r\n            password: form.password.value,\r\n            role: form.options.value,\r\n        };\r\n\r\n\r\n        const query = `mutation createUser($user: UserInputs!) {\r\n          userAdd(user: $user) {\r\n            username password role\r\n          }\r\n        }`;\r\n\r\n\r\n        const data = await graphQLFetch(query, { user });\r\n        if (data) {\r\n            this.setState({ accountCreated: true });\r\n        }\r\n        form.username.value = \"\";\r\n        form.password.value = \"\";\r\n\r\n        //TODO adda  toast with 'success' or failure\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n          <form onSubmit={this.handleSubmit} name=\"accountCreate\">\r\n              <FormGroup>\r\n                  <Col sm={3}>\r\n                  <ControlLabel>Account Information</ControlLabel>\r\n                  <FormControl type=\"text\" name=\"username\" placeholder=\"username\"/>\r\n                  <FormControl type=\"password\" name=\"password\" placeholder=\"password\" />\r\n                      <ButtonToolbar>\r\n                          <ToggleButtonGroup justified type=\"radio\" name=\"options\" defaultValue={'User'}>\r\n                              <ToggleButton name=\"admin\" value={'Admin'}>Admin</ToggleButton>\r\n                              <ToggleButton value={'User'}>Non-Admin</ToggleButton>\r\n                          </ToggleButtonGroup>\r\n                      </ButtonToolbar>\r\n                      <Button type=\"submit\">Create</Button>\r\n                  </Col>\r\n              </FormGroup>\r\n          </form>\r\n    );\r\n  }\r\n}\r\n\r\nAccountCreate.propTypes = {\r\n    addUser: PropTypes.func,\r\n};\r\n","/* eslint \"react/prefer-stateless-function\": \"off\" */\r\n\r\nimport React from 'react';\r\nimport {\r\n  ButtonToolbar,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  ToggleButton,\r\n  ToggleButtonGroup\r\n} from \"react-bootstrap\";\r\nimport graphQLFetch from \"./graphQLFetch\";\r\n\r\n\r\nexport default class Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    const form = document.forms.loginForm;\r\n\r\n\r\n    let username = form.username.value;\r\n    let password = form.password.value;\r\n\r\n\r\n    const query = `query ($username: String!, $password:String!) {\r\n        user (username: $username, password: $password) {\r\n          _id\r\n        }\r\n    }`;\r\n\r\n    const data = await graphQLFetch(query, { username, password });\r\n\r\n    if (data.user !== null ) {\r\n      alert(\"account exists!\");\r\n    }\r\n    else {\r\n      alert(\"doesn't exist\");\r\n    }\r\n    form.username.value = \"\";\r\n    form.password.value = \"\";\r\n  }\r\n\r\n\r\n  onSuccess(username) {\r\n    this.state = { authenticated: true };\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <form onSubmit={this.handleSubmit} name=\"loginForm\">\r\n          <FormGroup>\r\n            <Col sm={3}>\r\n              <FormControl type=\"text\" name=\"username\" placeholder=\"username\"/>\r\n              <FormControl type=\"password\" name=\"password\" placeholder=\"password\" />\r\n              <button bsType=\"submit\">Log-In</button>\r\n            </Col>\r\n          </FormGroup>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n","import InventoryList from './InventoryList.jsx';\r\nimport ProductReport from './ProductReport.jsx';\r\nimport ProductEdit from './ProductEdit.jsx';\r\nimport About from './About.jsx';\r\nimport NotFound from './NotFound.jsx';\r\nimport AccountCreateAndLogin from './AccountCreateAndLogin.jsx';\r\n\r\nconst routes = [\r\n    { path: '/products', component: InventoryList },\r\n    { path: '/edit/:id', component: ProductEdit },\r\n    { path: '/report', component: ProductReport },\r\n    { path: '/about', component: About },\r\n    { path: '/sign-in', component: AccountCreateAndLogin },\r\n    { path: '*', component: NotFound },\r\n];\r\nexport default routes;\r\n","import React from 'react';\r\n\r\nexport default function ProductReport() {\r\n  return (\r\n    <div>\r\n      <h2>This is a placeholder for the Product Report</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Grid,Tabs,Tab } from 'react-bootstrap';\r\nimport AccountCreate from './AccountCreate.jsx';\r\nimport Login from './Login.jsx';\r\n\r\n\r\nexport default class AccountCreateAndLogin extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid>\r\n                    <Tabs defaultActiveKey={\"Login\"} id=\"home\">\r\n                        <Tab eventKey={\"Create\"} title=\"Create Account\">\r\n                            <h1>Create an Account</h1>\r\n                            <AccountCreate />\r\n                        </Tab>\r\n                        <Tab eventKey={\"Login\"} title=\"Log-In\">\r\n                            <h1>Login with Existing Account</h1>\r\n                            <Login style={{alignSelf: 'flex-end'}}/>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport routes from './routes.js';\r\n\r\nexport default class Contents extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { authenticated: false };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Redirect exact from=\"/\" to=\"/products\" />\r\n                {routes.map(attrs => <Route {...attrs} key={attrs.path} />)}\r\n            </Switch>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport store from './store.js';\r\nimport {\r\n  Modal, NavItem, Glyphicon, Tooltip, OverlayTrigger,\r\n  Form, FormGroup, FormControl, ControlLabel, \r\n  Button, ButtonToolbar\r\n} from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ProductAddNav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showing: false,\r\n    };\r\n    this.showModal = this.showModal.bind(this);\r\n    this.hideModal = this.hideModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  showModal() {\r\n    this.setState({ showing: true });\r\n  }\r\n\r\n  hideModal() {\r\n    this.setState({ showing: false });\r\n  }\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.hideModal();\r\n\r\n    const form = document.forms.productAdd;\r\n    const quantity = parseInt(form.quantity.value); \r\n    // quantity can have negative value rn\r\n\r\n    const expirationDate = (form.expirationDate.value) \r\n      ? new Date(form.expirationDate.value + ' ' + form.expirationTime.value) \r\n      : new Date(new Date().getTime() + 1000 * 60 * 60 * 24 * 10);\r\n    const product = {\r\n      description: form.description.value,\r\n      quantity: isNaN(quantity) ? 0 : quantity,\r\n      createdDate: new Date(new Date().getTime() + 1000 * 60 * 60 * 24 * 10),\r\n      category: form.category.value,\r\n      information: form.information.value,\r\n      expirationDate,\r\n    }\r\n\r\n    const query = `mutation productAdd($product: ProductInputs!) {\r\n      productAdd(product: $product) {\r\n        id\r\n      }\r\n    }`;\r\n\r\n    const data = await graphQLFetch(query, { product });\r\n\r\n    // TODO: find a way to rerender without relying on routing back to home pg\r\n    if (data) {\r\n      const { history } = this.props;\r\n      history.push(`/`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { showing } = this.state;\r\n    const defaultExpiration = new Date(\r\n      new Date().getTime() + 1000 * 60 * 60 * 12).toTimeString().substr(0, 8);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <NavItem onClick={this.showModal}>\r\n          <OverlayTrigger\r\n            placement=\"left\"\r\n            delayShow={1000}\r\n            overlay={<Tooltip id=\"/products\">Add Product</Tooltip>}\r\n          >\r\n            <Glyphicon glyph=\"plus\" />\r\n          </OverlayTrigger>\r\n        </NavItem>\r\n        <Modal keyboard show={showing} onHide={this.hideModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add New Product</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form name=\"productAdd\">\r\n              <FormGroup>\r\n                <ControlLabel>Product name: </ControlLabel>\r\n                <FormControl name=\"description\" type=\"text\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel>Quantity: </ControlLabel>\r\n                <FormControl name=\"quantity\" type=\"number\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel>Expiration date: </ControlLabel>\r\n                <FormControl\r\n                  name=\"expirationDate\"\r\n                  type=\"date\"\r\n                  value={new Date().toISOString().substr(0, 10)}\r\n                />\r\n                <FormControl\r\n                  name=\"expirationTime\"\r\n                  type=\"time\"\r\n                  value={defaultExpiration}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel>Category: </ControlLabel>\r\n                <FormControl name=\"category\" componentClass=\"select\" placeholder=\"select\">\r\n                  <option value=\"Muffin\">Muffin</option>\r\n                  <option value=\"Cupcake\">Cupcake</option>\r\n                  <option value=\"Cake\">Cake</option>\r\n                  <option value=\"Cookie\">Cookie</option>\r\n                  <option value=\"Pastry\">Pastry</option>\r\n                  <option value=\"Other\">Other</option>\r\n                </FormControl>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel>Information</ControlLabel>\r\n                <FormControl name=\"information\" componentClass=\"textarea\" placeholder=\"Product information\" />\r\n              </FormGroup>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <ButtonToolbar>\r\n              <Button\r\n                type=\"button\"\r\n                bsStyle=\"primary\"\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button bsStyle=\"link\" onClick={this.hideModal}>Cancel</Button>\r\n            </ButtonToolbar>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ProductAddNav);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {\r\n  Navbar, Nav, NavItem, MenuItem, Grid,\r\n} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nimport Contents from './Contents.jsx';\r\nimport ProductAddNav from './ProductAddNav.jsx'\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <Navbar>\r\n      <Navbar.Header>\r\n        <Navbar.Brand>Inventory Tracker</Navbar.Brand>\r\n      </Navbar.Header>\r\n\r\n      <Nav>\r\n        <LinkContainer exact to=\"/\"><NavItem>Home</NavItem></LinkContainer>\r\n\r\n        <LinkContainer to=\"/about\"><MenuItem>About</MenuItem></LinkContainer>\r\n\r\n        <LinkContainer to=\"/sign-in\"><NavItem>Sign in</NavItem></LinkContainer>\r\n\r\n        <LinkContainer to=\"/products\"><NavItem>Inventory Overview </NavItem></LinkContainer>\r\n\r\n\r\n      </Nav>\r\n\r\n      <Nav pullRight>\r\n        <ProductAddNav />\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default class Page extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar authenticated={this.props.authenticated} />\r\n        <Grid fluid>\r\n          <Contents />\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import 'babel-polyfill';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Page from '../src/Page.jsx';\r\nimport store from '../src/store.js';\r\n// eslint-disable-next-line no-underscore-dangle\r\nstore.initialData = window.__INITIAL_DATA__;\r\n\r\nconst element = (\r\n  <Router>\r\n    <Page />\r\n  </Router>\r\n);\r\n\r\nReactDOM.hydrate(element, document.getElementById('content'));\r\n\r\nif (module.hot) {\r\n  module.hot.accept();\r\n}\r\n"],"sourceRoot":""}