{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ProductFilter.jsx","webpack:///./src/InventoryTable.jsx","webpack:///./src/ProductAdd.jsx","webpack:///./src/graphQLFetch.js","webpack:///./src/Toast.jsx","webpack:///./src/ProductInformation.jsx","webpack:///./src/InventoryList.jsx","webpack:///./src/NumInput.jsx","webpack:///./src/DateInput.jsx","webpack:///./src/store.js","webpack:///./src/ProductEdit.jsx","webpack:///./src/About.jsx","webpack:///./src/NotFound.jsx","webpack:///./src/AccountCreate.jsx","webpack:///./src/Login.jsx","webpack:///./src/routes.js","webpack:///./src/ProductReport.jsx","webpack:///./src/LandingPage.jsx","webpack:///./src/Contents.jsx","webpack:///./src/ProductAddNav.jsx","webpack:///./src/Page.jsx","webpack:///./browser/App.jsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","ProductFilter","search","location","params","URLSearchParams","state","quantity","changed","onChangeStatus","applyFilter","showOriginalFilter","prevProps","this","props","e","setState","target","history","pathname","onChange","Button","bsStyle","type","onClick","disabled","React","Component","withRouter","InventoryRow","product","deleteProduct","index","selectLocation","id","editTooltip","Tooltip","placement","deleteTooltip","tableRow","description","category","createdDate","toDateString","expirationDate","to","OverlayTrigger","delayShow","overlay","bsSize","Glyphicon","glyph","preventDefault","InventoryTable","inventory","inventoryRows","map","Table","bordered","condensed","hover","responsive","handleSubmit","form","document","forms","productAdd","Date","getTime","addProduct","onSubmit","placeholder","propTypes","PropTypes","func","isRequired","dateRegex","RegExp","jsonDateReviver","test","graphQLFetch","query","variables","showError","apiEndpoint","ENV","UI_API_ENDPOINT","fetch","method","headers","body","JSON","stringify","response","text","parse","errors","error","extensions","code","details","exception","join","message","Toast","showing","onDismiss","clearTimeout","dismissTimer","setTimeout","children","Collapse","in","style","position","bottom","left","Alert","ProductInformation","loadData","match","parseInt","information","InventoryList","toastVisible","toastMessage","toastType","showSuccess","dismissToast","vars","console","log","productList","productDelete","prevState","newList","Fragment","Panel","Heading","Title","toggle","Body","collapsible","Route","path","component","NumInput","num","toString","onBlur","val","Number","isNaN","DateInput","date","toISOString","substr","focused","valid","onFocus","oldValid","onValidityChange","dateValue","origValue","className","displayValue","size","store","ProductEdit","initialData","invalidFields","prevId","event","naturalValue","textValue","undefined","keys","created","changes","productUpdate","fetchData","propsId","validationMessage","rows","cols","Link","About","apiAbout","about","NotFound","AccountCreate","accountCreate","user","username","password","role","options","accountCreated","FormGroup","Col","sm","ControlLabel","FormControl","ButtonToolbar","ToggleButtonGroup","justified","defaultValue","ToggleButton","addUser","Login","loginForm","alert","authenticated","bsType","routes","Grid","Tabs","defaultActiveKey","Tab","eventKey","title","alignSelf","Contents","Switch","Redirect","exact","from","attrs","ProductAddNav","showModal","hideModal","NavItem","Modal","keyboard","show","onHide","Header","closeButton","Form","componentClass","Footer","NavBar","Navbar","Brand","Nav","MenuItem","pullRight","Page","fluid","__INITIAL_DATA__","element","ReactDOM","hydrate","getElementById"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrBiB,EAAG,GAGAZ,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU8B,QAGnC,IAAIC,EAASH,EAAiB5B,GAAY,CACzCK,EAAGL,EACHgC,GAAG,EACHF,QAAS,IAUV,OANAhB,EAAQd,GAAUW,KAAKoB,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG/DK,EAAOC,GAAI,EAGJD,EAAOD,QAKfJ,EAAoBO,EAAInB,EAGxBY,EAAoBQ,EAAIN,EAGxBF,EAAoBS,EAAI,SAASL,EAASM,EAAMC,GAC3CX,EAAoBY,EAAER,EAASM,IAClC5B,OAAO+B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEX,EAAoBgB,EAAI,SAASZ,GACX,oBAAXa,QAA0BA,OAAOC,aAC1CpC,OAAO+B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DrC,OAAO+B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKzC,OAAO0C,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBzC,OAAO+B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBS,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAL,EAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRX,EAAoBY,EAAI,SAASgB,EAAQC,GAAY,OAAO/C,OAAOC,UAAUC,eAAeC,KAAK2C,EAAQC,IAGzG7B,EAAoB8B,EAAI,IAExB,IAAIC,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAW5C,KAAKuC,KAAKK,GAC5CA,EAAW5C,KAAOf,EAClB2D,EAAaA,EAAWG,QACxB,IAAI,IAAIvD,EAAI,EAAGA,EAAIoD,EAAWlD,OAAQF,IAAKP,EAAqB2D,EAAWpD,IAC3E,IAAIU,EAAsB4C,EAI1B1C,EAAgBJ,KAAK,CAAC,IAAI,IAEnBM,I,i9CChJH0C,E,sQACJ,cAAsC,MAAZC,EAAY,EAAxBC,SAAYD,Q,4FAAY,SACpC,eACA,IAAME,EAAS,IAAIC,IAAgBH,GAFC,OAGpC,EAAKI,MAAQ,CACXC,SAAUH,EAAOvB,IAAI,aAAe,GACpC2B,SAAS,GAGX,EAAKC,eAAiB,EAAKA,eAAejB,KAApB,MACtB,EAAKkB,YAAc,EAAKA,YAAYlB,KAAjB,MACnB,EAAKmB,mBAAqB,EAAKA,mBAAmBnB,KAAxB,MAVU,E,wDAanBoB,GAC4BA,EAArCT,SAAYD,SACaW,KAAKC,MAA9BX,SAAYD,QAElBW,KAAKF,uB,qCAIMI,GACbF,KAAKG,SAAS,CAAET,SAAUQ,EAAEE,OAAOhC,MAAOuB,SAAS,M,2CAGhC,IACCN,EAAaW,KAAKC,MAA9BX,SAAYD,OACdE,EAAS,IAAIC,IAAgBH,GACnCW,KAAKG,SAAS,CACZT,SAAUH,EAAOvB,IAAI,aAAe,GACpC2B,SAAS,M,oCAIC,IACJD,EAAaM,KAAKP,MAAlBC,SACYM,KAAKC,MAAjBI,QACAjE,KAAK,CACXkE,SAAU,YACVjB,OAAQK,EAAW,aAAH,OAAgBA,GAAa,O,+BAMxC,MACuBM,KAAKP,MAA3BC,EADD,EACCA,SAAUC,EADX,EACWA,QAClB,OACE,mDAEG,IACD,4BAAQvB,MAAOsB,EAAUa,SAAUP,KAAKJ,gBACtC,4BAAQxB,MAAM,IAAd,kBACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,qBAED,IACD,kBAACoC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,SAASC,QAASX,KAAKH,aAAtD,SAGC,IACD,kBAACW,EAAA,EAAD,CACEE,KAAK,SACLC,QAASX,KAAKF,mBACdc,UAAWjB,GAHb,e,8BA9DoBkB,IAAMC,WA0EnBC,cAAW3B,G,oCCvEpB4B,EAAeD,aAAW,YAE1B,IADJE,EACI,EADJA,QAAqB5B,EACjB,EADKC,SAAYD,OAAU6B,EAC3B,EAD2BA,cAAeC,EAC1C,EAD0CA,MAExCC,EAAiB,CAAEd,SAAU,aAAF,OAAeW,EAAQI,IAAMhC,UACxDiC,EACJ,kBAACC,EAAA,EAAD,CAASF,GAAG,gBAAgBG,UAAU,OAAtC,kBAEIC,EACJ,kBAACF,EAAA,EAAD,CAASF,GAAG,iBAAiBG,UAAU,OAAvC,oBAQF,IAAME,EACJ,4BACE,4BAAKT,EAAQI,IACb,4BAAKJ,EAAQU,aACb,4BAAKV,EAAQW,UACb,4BAAKX,EAAQY,YAAcZ,EAAQY,YAAYC,eAAiB,KAChE,4BAAKb,EAAQc,eAAiBd,EAAQc,eAAeD,eAAiB,KACtE,4BAAKb,EAAQvB,UACb,4BACE,kBAAC,gBAAD,CAAesC,GAAE,gBAAWf,EAAQI,KAClC,kBAACY,EAAA,EAAD,CAAgBC,UAAW,IAAMC,QAASb,GACxC,kBAACd,EAAA,EAAD,CAAQ4B,OAAO,UACb,kBAACC,EAAA,EAAD,CAAWC,MAAM,YAItB,IACD,kBAACL,EAAA,EAAD,CAAgBC,UAAW,IAAMC,QAASV,GACxC,kBAACjB,EAAA,EAAD,CAAQ4B,OAAO,SAASzB,QAvBhC,SAAkBT,GAChBA,EAAEqC,iBACFrB,EAAcC,KAsBN,kBAACkB,EAAA,EAAD,CAAWC,MAAM,cAM3B,OACE,kBAAC,gBAAD,CAAeN,GAAIZ,GAChBM,MASQ,SAASc,EAAT,GAAsD,IAA5BC,EAA4B,EAA5BA,UAAWvB,EAAiB,EAAjBA,cAC5CwB,EAAgBD,EAAUE,KAAI,SAAC1B,EAASE,GAAV,OAClC,kBAACH,EAAD,CACEtC,IAAKuC,EAAQI,GACbJ,QAASA,EACTC,cAAeA,EACfC,MAAOA,OAGX,OACE,kBAACyB,EAAA,EAAD,CAAOC,UAAQ,EAACC,WAAS,EAACC,OAAK,EAACC,YAAU,GACxC,+BACE,4BACE,kCACA,2CACA,wCACA,uCACA,+CACA,wCACA,wCAGJ,+BACGN,I,u+CCxEP,aAAc,a,4FAAA,UACZ,gBACKO,aAAe,EAAKA,aAAatE,KAAlB,MAFR,E,kDAKDuB,GACXA,EAAEqC,iBACF,IAAMW,EAAOC,SAASC,MAAMC,WACtBpC,EAAU,CACdU,YAAauB,EAAKvB,YAAYvD,MAC9BsB,SAAUwD,EAAKxD,SAAStB,MACxByD,YAAa,IAAIyB,MAAK,IAAIA,MAAOC,UAAY,SAI/CC,EADuBxD,KAAKC,MAApBuD,YACGvC,GAGXiC,EAAKvB,YAAYvD,MAAQ,GACzB8E,EAAKxD,SAAStB,MAAQ,K,+BAItB,OACE,0BAAMT,KAAK,aAAa8F,SAAUzD,KAAKiD,cACrC,2BAAOvC,KAAK,OAAO/C,KAAK,cAAc+F,YAAY,iBAClD,2BAAOhD,KAAK,OAAO/C,KAAK,WAAW+F,YAAY,aAC/C,4BAAQhD,KAAK,UAAb,a,8BA5BgCG,IAAMC,YAkCnC6C,UAAY,CACrBH,WAAYI,IAAUC,KAAKC,Y,kVC7C7B,IAAMC,EAAY,IAAIC,OAAO,+BAE7B,SAASC,EAAgBvF,EAAKN,GAC5B,OAAI2F,EAAUG,KAAK9F,GAAe,IAAIkF,KAAKlF,GAAeA,EAG7C,SAAe+F,EAA9B,kC,iDAAe,WAA4BC,GAA5B,uHAAmCC,EAAnC,+BAA+C,GAAIC,EAAnD,+BAA+D,KACtEC,EACFtF,OAAOuF,IAAIC,gBAFF,kBAKYC,IAAMH,EAAa,CACxCI,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEX,QAAOC,gBARrB,cAKLW,EALK,gBAUQA,EAASC,OAVjB,cAULJ,EAVK,QAWLlI,EAASmI,KAAKI,MAAML,EAAMZ,IAErBkB,SAEqB,oBADxBC,EAAQzI,EAAOwI,OAAO,IAClBE,WAAWC,MACbC,EAAUH,EAAMC,WAAWG,UAAUL,OAAOM,KAAK,OACjDnB,GAAWA,EAAU,GAAD,OAAIc,EAAMM,QAAV,eAAwBH,KACzCjB,GACPA,EAAU,GAAD,OAAIc,EAAMC,WAAWC,KAArB,aAA8BF,EAAMM,WAnBxC,kBAsBJ/I,EAAOrB,MAtBH,yCAwBLgJ,GAAWA,EAAU,oCAAD,OAAqC,KAAEoB,UAxBtD,kBAyBJ,MAzBI,2D,u2CCNMC,G,yXACE,MACY3F,KAAKC,MAA5B2F,EADW,EACXA,QAASC,EADE,EACFA,UACbD,IACFE,aAAa9F,KAAK+F,cAClB/F,KAAK+F,aAAeC,WAAWH,EAAW,Q,6CAI5CC,aAAa9F,KAAK+F,gB,+BAEX,MAGH/F,KAAKC,MADP2F,EAFK,EAELA,QAASnF,EAFJ,EAEIA,QAASoF,EAFb,EAEaA,UAAWI,EAFxB,EAEwBA,SAE/B,OACE,kBAACC,GAAA,EAAD,CAAUC,GAAIP,GACZ,yBAAKQ,MAAO,CAAEC,SAAU,QAASC,OAAQ,GAAIC,KAAM,KACjD,kBAACC,GAAA,EAAD,CAAO/F,QAASA,EAASoF,UAAWA,GACjCI,U,gCAnBsBpF,IAAMC,W,o1CCEpB2F,G,4QACnB,aAAc,a,4FAAA,UACZ,gBACKhH,MAAQ,CAAEwB,QAAS,IAFZ,E,yDAMZjB,KAAK0G,a,yCAGY3G,GAC6BA,EAAtC4G,MAASpH,OAAU8B,KACWrB,KAAKC,MAAnC0G,MAASpH,OAAU8B,IAEzBrB,KAAK0G,a,8JAKoBrF,EAAWrB,KAAKC,MAAnC0G,MAASpH,OAAU8B,G,SAOR8C,E,gGAAoB,CAAE9C,GAAIuF,SAASvF,EAAI,M,QAApD/F,E,QAEJ0E,KAAKG,SAAS,CAAEc,QAAS3F,EAAK2F,UAE9BjB,KAAKG,SAAS,CAAEc,QAAS,K,6SAIpB,IACY4F,EAAkB7G,KAAKP,MAAlCwB,QAAW4F,YACnB,OACE,6BACE,2CACA,6BAAMA,S,gCAvCkChG,IAAMC,W,8wECYjCgG,G,4QACnB,aAAc,a,4FAAA,UACZ,gBACOrH,MAAQ,CACTgD,UAAW,GACXsE,cAAc,EACdC,aAAc,IACdC,UAAW,QAEf,EAAK/F,cAAgB,EAAKA,cAAcvC,KAAnB,OACrB,EAAKuI,YAAc,EAAKA,YAAYvI,KAAjB,OACnB,EAAK2F,UAAY,EAAKA,UAAU3F,KAAf,OACjB,EAAKwI,aAAe,EAAKA,aAAaxI,KAAlB,OAXV,E,yDAgBZqB,KAAK0G,a,yCAIY3G,GAC4BA,EAArCT,SAAYD,SACaW,KAAKC,MAA9BX,SAAYD,QAElBW,KAAK0G,a,qKAMarH,EAAaW,KAAKC,MAA9BX,SAAYD,OACdE,EAAS,IAAIC,IAAgBH,GAC7B+H,EAAO,GACT7H,EAAOvB,IAAI,cAAaoJ,EAAK1H,SAAWkH,SAASrH,EAAOvB,IAAI,YAAa,KAG7EqJ,QAAQC,IAAI,oB,SAUSnD,E,8KAAoBiD,EAAMpH,KAAKsE,W,QAA5ChJ,E,UAGN+L,QAAQC,IAAI,+BACZtH,KAAKG,SAAS,CAAEsC,UAAWnH,EAAKiM,e,mKAKhBpG,G,2GAIVsB,EAAczC,KAAKP,MAAnBgD,U,EAC4CzC,KAAKC,M,IAAjDX,SAAYgB,E,EAAAA,SAAUjB,E,EAAAA,OAAUgB,E,EAAAA,QAC9BgB,EAAOoB,EAAUtB,GAAjBE,G,SACW8C,E,2EAAoB,CAAE9C,GAAIuF,SAASvF,EAAI,KAAOrB,KAAKsE,W,QAAhEhJ,E,SACIA,EAAKkM,eACfxH,KAAKG,UAAS,SAACsH,GACb,IAAMC,EAAU,GAAID,EAAUhF,WAK9B,OAJInC,IAAa,aAAL,OAAkBe,IAC5BhB,EAAQjE,KAAK,CAAEkE,SAAU,YAAajB,WAExCqI,EAAQ1K,OAAOmE,EAAO,GACf,CAAEsB,UAAWiF,MAEpB1H,KAAKkH,YAAL,0BAAoC7F,EAApC,oBAEFrB,KAAK0G,W,gIAIKhB,GACR1F,KAAKG,SAAS,CACV4G,cAAc,EAAMC,aAActB,EAASuB,UAAW,c,gCAIpDvB,GACN1F,KAAKG,SAAS,CACV4G,cAAc,EAAMC,aAActB,EAASuB,UAAW,a,qCAK1DjH,KAAKG,SAAS,CAAE4G,cAAc,M,+BAG3B,IACGtE,EAAczC,KAAKP,MAAnBgD,UADH,EAE6CzC,KAAKP,MAA/CsH,EAFH,EAEGA,aAAcE,EAFjB,EAEiBA,UAAWD,EAF5B,EAE4BA,aAC3BL,EAAU3G,KAAKC,MAAf0G,MACR,OACE,kBAAC,IAAMgB,SAAP,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAMC,QAAP,KACE,kBAACD,EAAA,EAAME,MAAP,CAAaC,QAAM,GAAnB,WAEF,kBAACH,EAAA,EAAMI,KAAP,CAAYC,aAAW,GACrB,kBAAC,EAAD,QAGJ,6BACA,kBAACzF,EAAD,CAAgBC,UAAWA,EAAWvB,cAAelB,KAAKkB,gBAC1D,6BACA,kBAACgH,EAAA,EAAD,CAAOC,KAAI,UAAKxB,EAAMwB,KAAX,QAAuBC,UAAW3B,KACzC,kBAAC,GAAD,CACIb,QAASmB,EACTlB,UAAW7F,KAAKmH,aAChB1G,QAASwG,GAERD,S,gCAtH0BnG,IAAMC,W,67CCL5BuH,G,wQACnB,WAAYpI,GAAO,MAVLqI,EAUK,O,4FAAA,UACjB,cAAMrI,IACDR,MAAQ,CAAErB,OAZHkK,EAYiBrI,EAAM7B,MAXvB,MAAPkK,EAAcA,EAAIC,WAAa,KAYpC,EAAKC,OAAS,EAAKA,OAAO7J,KAAZ,OACd,EAAK4B,SAAW,EAAKA,SAAS5B,KAAd,OAJC,E,8CAOVuB,GACHA,EAAEE,OAAOhC,MAAMuI,MAAM,UACvB3G,KAAKG,SAAS,CAAE/B,MAAO8B,EAAEE,OAAOhC,U,6BAI7B8B,GAAG,IAlBJuI,EAmBIlI,EAAaP,KAAKC,MAAlBM,SACAnC,EAAU4B,KAAKP,MAAfrB,MACRmC,EAASL,GArBLuI,EAAM7B,SAqBWxI,EArBG,IACnBsK,OAAOC,MAAMF,GAAO,KAAOA,M,+BAuBzB,IACCrK,EAAU4B,KAAKP,MAAfrB,MACR,OACE,8BACEsC,KAAK,QACDV,KAAKC,MAFX,CAGE7B,MAAOA,EACPoK,OAAQxI,KAAKwI,OACbjI,SAAUP,KAAKO,iB,gCA5BeM,IAAMC,W,+tCCIvB8H,G,wQACnB,WAAY3I,GAAO,MAVD4I,EAUC,O,4FAAA,UACjB,cAAM5I,IACDR,MAAQ,CACXrB,OAbcyK,EAaI5I,EAAM7B,MAZZ,MAARyK,EAAgBA,EAAKC,cAAcC,OAAO,EAAG,IAAM,IAavDC,SAAS,EACTC,OAAO,GAET,EAAKC,QAAU,EAAKA,QAAQvK,KAAb,OACf,EAAK6J,OAAS,EAAKA,OAAO7J,KAAZ,OACd,EAAK4B,SAAW,EAAKA,SAAS5B,KAAd,OATC,E,+CAajBqB,KAAKG,SAAS,CAAE6I,SAAS,M,6BAGpB9I,GAAG,IArBJuI,EAqBI,EAC2BzI,KAAKP,MAAhCrB,EADA,EACAA,MAAc+K,EADd,EACOF,MADP,EAE+BjJ,KAAKC,MAApCmJ,EAFA,EAEAA,iBAAkB7I,EAFlB,EAEkBA,SACpB8I,GAxBFZ,EAAM,IAAInF,KAwBalF,GAvBtBsK,OAAOC,MAAMF,EAAIlF,WAAa,KAAOkF,GAwBpCQ,EAAkB,KAAV7K,GAA6B,MAAbiL,EAC1BJ,IAAUE,GAAYC,GACxBA,EAAiBlJ,EAAG+I,GAEtBjJ,KAAKG,SAAS,CAAE6I,SAAS,EAAOC,UAC5BA,GAAO1I,EAASL,EAAGmJ,K,+BAGhBnJ,GACHA,EAAEE,OAAOhC,MAAMuI,MAAM,aACvB3G,KAAKG,SAAS,CAAE/B,MAAO8B,EAAEE,OAAOhC,U,+BAI3B,IAhDYyK,EAgDZ,EAC2B7I,KAAKP,MAA/BwJ,EADD,EACCA,MAAOD,EADR,EACQA,QAAS5K,EADjB,EACiBA,MADjB,EAE4B4B,KAAKC,MAAzBqJ,EAFR,EAEClL,MAAkBT,EAFnB,EAEmBA,KACpB4L,EAAcN,GAAUD,EAAuB,KAAZ,UACnCQ,EAAgBR,IAAYC,EAAS7K,EAnD7B,OADKyK,EAqDDS,GApDIT,EAAK/G,eAAiB,GAqD5C,OACE,2BACEpB,KAAK,OACL+I,KAAM,GACN9L,KAAMA,EACN4L,UAAWA,EACXnL,MAAOoL,EACP9F,YAAasF,EAAU,aAAe,KACtCE,QAASlJ,KAAKkJ,QACdV,OAAQxI,KAAKwI,OACbjI,SAAUP,KAAKO,gB,gCAnDgBM,IAAMC,WCd9B4I,GADD,G,6oFCQOC,G,wQAYjB,aAAc,O,4FAAA,SACV,eACA,IAAM1I,EAAUyI,GAAME,YAAcF,GAAME,YAAY3I,QAAU,KAFtD,cAGHyI,GAAME,YACb,EAAKnK,MAAQ,CACTwB,UACA4I,cAAe,GACf9C,cAAc,EACdC,aAAc,IACdC,UAAW,WAEf,EAAK1G,SAAW,EAAKA,SAAS5B,KAAd,OAChB,EAAKsE,aAAe,EAAKA,aAAatE,KAAlB,OACpB,EAAKyK,iBAAmB,EAAKA,iBAAiBzK,KAAtB,OACxB,EAAKuI,YAAc,EAAKA,YAAYvI,KAAjB,OACnB,EAAK2F,UAAY,EAAKA,UAAU3F,KAAf,OACjB,EAAKwI,aAAe,EAAKA,aAAaxI,KAAlB,OAhBV,E,mFAXSgI,EAAOrC,G,+FAORjD,EAASsF,EAAnBpH,OAAU8B,G,SACG8C,E,iKAAoB,CAAE9C,GAAIuF,SAASvF,EAAI,KAAOiD,G,cAA7D3H,E,yBACCA,G,6IAuBQ,MADKqD,KAAKP,MAAjBwB,SACajB,KAAK0G,a,yCAGX3G,GAAW,IACK+J,EAAe/J,EAAtC4G,MAASpH,OAAU8B,GACWrB,KAAKC,MAAnC0G,MAASpH,OAAU8B,KAChByI,GACP9J,KAAK0G,a,+BAIJqD,EAAOC,GAAc,MACSD,EAAM3J,OAAjCzC,EADkB,EAClBA,KAAasM,EADK,EACZ7L,MACRA,OAAyB8L,IAAjBF,EAA6BC,EAAYD,EACvDhK,KAAKG,UAAS,SAAAsH,GAAS,MAAK,CACxBxG,QAAS,GAAF,MAAOwG,EAAUxG,SAAjB,SAA2BtD,EAAOS,U,uCAIhC2L,EAAOd,GAAO,IACnBtL,EAASoM,EAAM3J,OAAfzC,KACRqC,KAAKG,UAAS,SAACsH,GACX,IAAMoC,EAAgB,GAAH,MAAQpC,EAAUoC,eAAlB,SAAkClM,GAAQsL,IAE7D,OADIA,UAAcY,EAAclM,GACzB,CAAEkM,sB,oEAIE3J,G,mGACfA,EAAEqC,iB,EACiCvC,KAAKP,MAAhCwB,E,EAAAA,QAAS4I,E,EAAAA,cACyB,IAAtC9N,OAAOoO,KAAKN,GAAe/N,O,wDAavBuF,EAA4BJ,EAA5BI,GAA4BJ,EAAxBmJ,QAAYC,E,GAAYpJ,E,2BACjBkD,E,mRAAoB,CAAEkG,UAAShJ,GAAIuF,SAASvF,EAAI,KAAOrB,KAAKsE,W,QAAzEhJ,E,UAEF0E,KAAKG,SAAS,CAAEc,QAAS3F,EAAKgP,gBAC9BtK,KAAKkH,YAAY,+B,gQAKbP,EAAU3G,KAAKC,MAAf0G,M,SACWgD,EAAYY,UAAU5D,EAAO,KAAM3G,KAAKsE,W,OAArDhJ,E,OACN0E,KAAKG,SAAS,CAAEc,QAAS3F,EAAOA,EAAK2F,QAAU,GAAI4I,cAAe,K,+HAatDnE,GACR1F,KAAKG,SAAS,CACV4G,cAAc,EAAMC,aAActB,EAASuB,UAAW,c,gCAGpDvB,GACN1F,KAAKG,SAAS,CACV4G,cAAc,EAAMC,aAActB,EAASuB,UAAW,a,qCAI1DjH,KAAKG,SAAS,CAAE4G,cAAc,M,+BAMtC,GAAgB,OADI/G,KAAKP,MAAjBwB,QACc,OAAO,KAFtB,IAGYI,EAASrB,KAAKP,MAAzBwB,QAAWI,GACYmJ,EAAgBxK,KAAKC,MAA5C0G,MAASpH,OAAU8B,GAC3B,GAAW,OAAPA,EACF,OAAe,MAAXmJ,EACK,sDAAwBA,EAAxB,uBAEF,KATF,IAaHC,EADIZ,EAAkB7J,KAAKP,MAAvBoK,cAGkC,IAAtC9N,OAAOoO,KAAKN,GAAe/N,SAC7B2O,EACE,yBAAKlB,UAAU,SAAf,qDAjBG,MAuBwCvJ,KAAKP,MAA5CwB,QAAWU,EAvBZ,EAuBYA,YAAajC,EAvBzB,EAuByBA,SAvBzB,EAwBwCM,KAAKP,MAA5CwB,QAAWW,EAxBZ,EAwBYA,SAAUiF,EAxBtB,EAwBsBA,YAxBtB,EAyB8C7G,KAAKP,MAAlDwB,QAAWY,EAzBZ,EAyBYA,YAAaE,EAzBzB,EAyByBA,eAzBzB,EA0B2C/B,KAAKP,MAA/CsH,EA1BD,EA0BCA,aAAcC,EA1Bf,EA0BeA,aAAcC,EA1B7B,EA0B6BA,UACpC,OACE,0BAAMxD,SAAUzD,KAAKiD,cACnB,uDAAyB5B,IACzB,+BACE,+BACE,4BACE,4CACA,4BACE,8BACEqJ,KAAM,EACNC,KAAM,GACNhN,KAAK,cACLS,MAAOuD,EACPpB,SAAUP,KAAKO,aAIrB,4BACE,wCACA,4BACE,kBAAC,GAAD,CACE5C,KAAK,cACLS,MAAOyD,EACPtB,SAAUP,KAAKO,SACf6I,iBAAkBpJ,KAAKoJ,iBACvB1K,IAAK2C,MAIX,4BACE,2CACA,4BACE,kBAAC,GAAD,CACE1D,KAAK,iBACLS,MAAO2D,EACPxB,SAAUP,KAAKO,SACf6I,iBAAkBpJ,KAAKoJ,iBACvB1K,IAAK2C,MAIX,4BACE,yCACA,4BACE,kBAAC,GAAD,CACE1D,KAAK,WACLS,MAAOsB,EACPa,SAAUP,KAAKO,SACf7B,IAAK2C,MAKX,4BACE,yCACA,4BACE,4BAAQ1D,KAAK,WAAWS,MAAOwD,EAAUrB,SAAUP,KAAKO,UACtD,4BAAQnC,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,YAKN,4BACE,4CACA,4BACE,8BACEsM,KAAM,EACNC,KAAM,GACNhN,KAAK,cACLS,MAAOyI,EACPtG,SAAUP,KAAKO,aAIrB,4BACE,6BACA,4BAAI,4BAAQG,KAAK,UAAb,cAIT+J,EACD,kBAACG,GAAA,EAAD,CAAM5I,GAAE,gBAAWX,EAAK,IAAxB,QACC,MACG,kBAACuJ,GAAA,EAAD,CAAM5I,GAAE,gBAAWX,EAAK,IAAxB,QACA,kBAAC,GAAD,CACIuE,QAASmB,EACTlB,UAAW7F,KAAKmH,aAChB1G,QAASwG,GAERD,Q,GA7OwBnG,IAAMC,W,slDCJ1B+J,G,sQAKjB,WAAY5K,GAAO,O,4FAAA,SACf,cAAMA,GACN,IAAM6K,EAAWpB,GAAME,YAAcF,GAAME,YAAYmB,MAAQ,KAFhD,cAGRrB,GAAME,YACb,EAAKnK,MAAQ,CAAEqL,YAJA,E,2LAHI3G,EAAa,iB,cAA1B7I,E,yBACCA,G,oQAUS,MADK0E,KAAKP,MAAlBqL,S,gCAEeD,EAAMN,Y,OAAnBjP,E,OACN0E,KAAKG,SAAS,CAAE2K,SAAUxP,EAAKyP,Q,4HAG9B,IACGD,EAAa9K,KAAKP,MAAlBqL,SACR,OACI,yBAAKvB,UAAU,eACX,6DACA,4BACKuB,Q,GAxBcjK,IAAMC,WCA1BkK,OAHf,WACE,OAAO,+C,m7CCMYC,G,4QAEjB,WAAYhL,GAAO,a,4FAAA,UACf,cAAMA,IACDgD,aAAe,EAAKA,aAAatE,KAAlB,OAFL,E,gFAOAuB,G,+FACfA,EAAEqC,iBACIW,EAAOC,SAASC,MAAM8H,cAGtBC,EAAO,CACTC,SAAUlI,EAAKkI,SAAShN,MACxBiN,SAAUnI,EAAKmI,SAASjN,MACxBkN,KAAMpI,EAAKqI,QAAQnN,O,SAWJ+F,E,0IAAoB,CAAEgH,S,eAErCnL,KAAKG,SAAS,CAAEqL,gBAAgB,IAEpCtI,EAAKkI,SAAShN,MAAQ,GACtB8E,EAAKmI,SAASjN,MAAQ,G,+SAO1B,OACM,0BAAMqF,SAAUzD,KAAKiD,aAActF,KAAK,iBACpC,kBAAC8N,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACT,kBAACC,GAAA,EAAD,4BACA,kBAACC,GAAA,EAAD,CAAanL,KAAK,OAAO/C,KAAK,WAAW+F,YAAY,aACrD,kBAACmI,GAAA,EAAD,CAAanL,KAAK,WAAW/C,KAAK,WAAW+F,YAAY,aACrD,kBAACoI,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmBC,WAAS,EAACtL,KAAK,QAAQ/C,KAAK,UAAUsO,aAAc,QACnE,kBAACC,GAAA,EAAD,CAAcvO,KAAK,QAAQS,MAAO,SAAlC,SACA,kBAAC8N,GAAA,EAAD,CAAc9N,MAAO,QAArB,eAGR,kBAACoC,EAAA,EAAD,CAAQE,KAAK,UAAb,kB,gCArDqBG,IAAMC,W,q1CA6DjDmK,GAActH,UAAY,CACtBwI,QAASvI,IAAUC,M,ICvDFuI,G,4QAEnB,WAAYnM,GAAO,a,4FAAA,UACjB,cAAMA,IACDgD,aAAe,EAAKA,aAAatE,KAAlB,OAFH,E,gFAMAuB,G,iGACjBA,EAAEqC,iBACIW,EAAOC,SAASC,MAAMiJ,UAGxBjB,EAAWlI,EAAKkI,SAAShN,MACzBiN,EAAWnI,EAAKmI,SAASjN,M,SASV+F,E,8IAAoB,CAAEiH,WAAUC,a,OAEjC,O,OAATF,KACPmB,MAAM,mBAGNA,MAAM,iBAERpJ,EAAKkI,SAAShN,MAAQ,GACtB8E,EAAKmI,SAASjN,MAAQ,G,2SAIdgN,GACRpL,KAAKP,MAAQ,CAAE8M,eAAe,K,+BAK9B,OACI,0BAAM9I,SAAUzD,KAAKiD,aAActF,KAAK,aACtC,kBAAC8N,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACE,GAAA,EAAD,CAAanL,KAAK,OAAO/C,KAAK,WAAW+F,YAAY,aACrD,kBAACmI,GAAA,EAAD,CAAanL,KAAK,WAAW/C,KAAK,WAAW+F,YAAY,aACzD,4BAAQ8I,OAAO,UAAf,kB,gCAhDqB3L,IAAMC,WCRzC,IAQe2L,GARA,CACX,CAAEtE,KAAM,YAAaC,UAAWtB,IAChC,CAAEqB,KAAM,YAAaC,UAAWuB,IAChC,CAAExB,KAAM,UAAWC,UCRR,WACb,OACE,6BACE,+EDMF,CAAED,KAAM,SAAUC,UAAWyC,IAC7B,CAAE1C,KAAM,WAAYC,UENT,WACb,OACE,6BACI,kBAACsE,EAAA,EAAD,KACM,kBAACC,GAAA,EAAD,CAAMC,iBAAkB,QAASvL,GAAG,QAChC,kBAACwL,GAAA,EAAD,CAAKC,SAAU,SAAUC,MAAM,kBAC3B,iDACA,kBAAC,GAAD,OAEJ,kBAACF,GAAA,EAAD,CAAKC,SAAU,QAASC,MAAM,UAC1B,2DACE,kBAAC,GAAD,CAAO3G,MAAO,CAAC4G,UAAW,oBFJ9C,CAAE7E,KAAM,IAAKC,UAAW4C,K,26CGPPiC,G,wQAEjB,WAAYhN,GAAO,a,4FAAA,UACf,cAAMA,IACDR,MAAQ,CAAE8M,eAAe,GAFf,E,8CAOf,OACI,kBAACW,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUC,OAAK,EAACC,KAAK,IAAIrL,GAAG,cAC3ByK,GAAO9J,KAAI,SAAA2K,GAAK,OAAI,kBAACpF,EAAA,EAAD,MAAWoF,EAAX,CAAkB5O,IAAK4O,EAAMnF,iB,gCAZ5BtH,IAAMC,W,62CCItCyM,G,4QACJ,WAAYtN,GAAO,a,4FAAA,UACjB,cAAMA,IACDR,MAAQ,CACXmG,SAAS,GAEX,EAAK4H,UAAY,EAAKA,UAAU7O,KAAf,OACjB,EAAK8O,UAAY,EAAKA,UAAU9O,KAAf,OACjB,EAAKsE,aAAe,EAAKA,aAAatE,KAAlB,OAPH,E,iDAWjBqB,KAAKG,SAAS,CAAEyF,SAAS,M,kCAIzB5F,KAAKG,SAAS,CAAEyF,SAAS,M,iEAGR1F,G,iGACjBA,EAAEqC,iBACFvC,KAAKyN,YAECvK,EAAOC,SAASC,MAAMC,WACtB3D,EAAWkH,SAAS1D,EAAKxD,SAAStB,OAElC6C,EAAU,CACdU,YAAauB,EAAKvB,YAAYvD,MAC9BsB,SAAUiJ,MAAMjJ,GAAY,EAAIA,EAChCmC,YAAa,IAAIyB,MAAK,IAAIA,MAAOC,UAAY,OAC7C3B,SAAUsB,EAAKtB,SAASxD,MACxByI,YAAa3D,EAAK2D,YAAYzI,O,SASb+F,E,qHAAoB,CAAElD,Y,eAInBjB,KAAKC,MAAjBI,QACAjE,KAAR,K,+SAIK,IACCwJ,EAAY5F,KAAKP,MAAjBmG,QAER,OACE,kBAAC,IAAM+B,SAAP,KACE,kBAAC+F,EAAA,EAAD,CAAS/M,QAASX,KAAKwN,WACrB,kBAACvL,EAAA,EAAD,CACET,UAAU,OACVU,UAAW,IACXC,QAAS,kBAACZ,EAAA,EAAD,CAASF,GAAG,aAAZ,gBAET,kBAACgB,EAAA,EAAD,CAAWC,MAAM,WAGrB,kBAACqL,GAAA,EAAD,CAAOC,UAAQ,EAACC,KAAMjI,EAASkI,OAAQ9N,KAAKyN,WAC1C,kBAACE,GAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,GAAA,EAAM7F,MAAP,yBAEF,kBAAC6F,GAAA,EAAM3F,KAAP,KACE,kBAACiG,GAAA,EAAD,CAAMtQ,KAAK,cACT,kBAAC8N,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,uBACA,kBAACC,GAAA,EAAD,CAAalO,KAAK,cAAc+C,KAAK,UAEvC,kBAAC+K,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,mBACA,kBAACC,GAAA,EAAD,CAAalO,KAAK,WAAW+C,KAAK,YAEpC,kBAAC+K,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,mBACA,kBAACC,GAAA,EAAD,CAAalO,KAAK,WAAWuQ,eAAe,SAASxK,YAAY,UAC/D,4BAAQtF,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,WAGJ,kBAACqN,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,oBACA,kBAACC,GAAA,EAAD,CAAalO,KAAK,cAAcuQ,eAAe,WAAWxK,YAAY,2BAI5E,kBAACiK,GAAA,EAAMQ,OAAP,KACE,kBAACrC,GAAA,EAAD,KACE,kBAACtL,EAAA,EAAD,CACEE,KAAK,SACLD,QAAQ,UACRE,QAASX,KAAKiD,cAHhB,UAOA,kBAACzC,EAAA,EAAD,CAAQC,QAAQ,OAAOE,QAASX,KAAKyN,WAArC,mB,gCAvGc5M,IAAMC,WAgHnBC,eAAWwM,I,qzCChH1B,SAASa,KACP,OACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAON,OAAR,KACE,kBAACM,EAAA,EAAOC,MAAR,2BAGF,kBAACC,EAAA,EAAD,KACE,kBAAC,gBAAD,CAAenB,OAAK,EAACpL,GAAG,KAAI,kBAAC0L,EAAA,EAAD,cAE5B,kBAAC,gBAAD,CAAe1L,GAAG,UAAS,kBAACwM,EAAA,EAAD,eAE3B,kBAAC,gBAAD,CAAexM,GAAG,YAAW,kBAAC0L,EAAA,EAAD,iBAE7B,kBAAC,gBAAD,CAAe1L,GAAG,aAAY,kBAAC0L,EAAA,EAAD,8BAKhC,kBAACa,EAAA,EAAD,CAAKE,WAAS,GACZ,kBAAC,GAAD,Q,IAMaC,G,6WAGjB,OACE,6BACE,kBAACN,GAAD,CAAQ7B,cAAevM,KAAKC,MAAMsM,gBAClC,kBAACG,EAAA,EAAD,CAAMiC,OAAK,GACT,kBAAC,GAAD,a,gCAPwB9N,IAAMC,WC5BxC4I,GAAME,YAAc3K,OAAO2P,iBAE3B,IAAMC,GACJ,kBAAC,IAAD,KACE,kBAAC,GAAD,OAIJC,IAASC,QAAQF,GAAS1L,SAAS6L,eAAe","file":"app.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([239,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint \"react/prefer-stateless-function\": \"off\" */\r\n\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport URLSearchParams from 'url-search-params';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ProductFilter extends React.Component {\r\n  constructor({ location: { search } }) {\r\n    super();\r\n    const params = new URLSearchParams(search);\r\n    this.state = {\r\n      quantity: params.get('quantity') || '',\r\n      changed: false,\r\n    };\r\n\r\n    this.onChangeStatus = this.onChangeStatus.bind(this);\r\n    this.applyFilter = this.applyFilter.bind(this);\r\n    this.showOriginalFilter = this.showOriginalFilter.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { location: { search: prevSearch } } = prevProps;\r\n    const { location: { search } } = this.props;\r\n    if (prevSearch !== search) {\r\n      this.showOriginalFilter();\r\n    }\r\n  }\r\n\r\n  onChangeStatus(e) {\r\n    this.setState({ quantity: e.target.value, changed: true });\r\n  }\r\n\r\n  showOriginalFilter() {\r\n    const { location: { search } } = this.props;\r\n    const params = new URLSearchParams(search);\r\n    this.setState({\r\n      quantity: params.get('quantity') || '',\r\n      changed: false,\r\n    });\r\n  }\r\n\r\n  applyFilter() {\r\n    const { quantity } = this.state;\r\n    const { history } = this.props;\r\n    history.push({\r\n      pathname: '/products',\r\n      search: quantity ? `?quantity=${quantity}` : '',\r\n    });\r\n  }\r\n\r\n  // TODO: replace select with React component for slider or selector\r\n  // TODO: replace hard coded values; incorporate lte or gte...?\r\n  render() {\r\n    const { quantity, changed } = this.state;\r\n    return (\r\n      <div>\r\n        Filter by quantity:\r\n        {' '}\r\n        <select value={quantity} onChange={this.onChangeStatus}>\r\n          <option value=\"\">(All Products)</option>\r\n          <option value=\"1\">Low Stock (1)</option>\r\n          <option value=\"0\">Out of Stock (0)</option>\r\n        </select>\r\n        {' '}\r\n        <Button bsStyle=\"primary\" type=\"button\" onClick={this.applyFilter}>\r\n          Apply\r\n        </Button>\r\n        {' '}\r\n        <Button\r\n          type=\"button\"\r\n          onClick={this.showOriginalFilter}\r\n          disabled={!changed}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ProductFilter);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Button, Glyphicon, Tooltip, OverlayTrigger, Table,\r\n} from 'react-bootstrap';\r\n\r\n/**\r\n * Represent a product listing in the table: \"one row\".\r\n */\r\nconst InventoryRow = withRouter(({\r\n  product, location: { search }, deleteProduct, index,\r\n}) => {\r\n  const selectLocation = { pathname: `/products/${product.id}`, search };\r\n  const editTooltip = (\r\n    <Tooltip id=\"close-tooltip\" placement=\"top\">Edit Inventory</Tooltip>\r\n  );\r\n  const deleteTooltip = (\r\n    <Tooltip id=\"delete-tooltip\" placement=\"top\">Delete Inventory</Tooltip>\r\n  );\r\n\r\n  function onDelete(e) {\r\n    e.preventDefault();\r\n    deleteProduct(index);\r\n  }\r\n\r\n  const tableRow = (\r\n    <tr>\r\n      <td>{product.id}</td>\r\n      <td>{product.description}</td>\r\n      <td>{product.category}</td>\r\n      <td>{product.createdDate ? product.createdDate.toDateString() : ' '}</td>\r\n      <td>{product.expirationDate ? product.expirationDate.toDateString() : ' '}</td>\r\n      <td>{product.quantity}</td>\r\n      <td>\r\n        <LinkContainer to={`/edit/${product.id}`}>\r\n          <OverlayTrigger delayShow={1000} overlay={editTooltip}>\r\n            <Button bsSize=\"xsmall\">\r\n              <Glyphicon glyph=\"edit\" />\r\n            </Button>\r\n          </OverlayTrigger>\r\n        </LinkContainer>\r\n        {' '}\r\n        <OverlayTrigger delayShow={1000} overlay={deleteTooltip}>\r\n          <Button bsSize=\"xsmall\" onClick={onDelete}>\r\n            <Glyphicon glyph=\"trash\" />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      </td>\r\n    </tr>\r\n  );\r\n  return (\r\n    <LinkContainer to={selectLocation}>\r\n      {tableRow}\r\n    </LinkContainer>\r\n  );\r\n});\r\n\r\n\r\n/**\r\n * Return all the products in a table.\r\n */\r\nexport default function InventoryTable({ inventory, deleteProduct }) {\r\n  const inventoryRows = inventory.map((product, index) => (\r\n    <InventoryRow\r\n      key={product.id}\r\n      product={product}\r\n      deleteProduct={deleteProduct}\r\n      index={index}\r\n    />\r\n  ));\r\n  return (\r\n    <Table bordered condensed hover responsive>\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Description</th>\r\n          <th>Category</th>\r\n          <th>Created</th>\r\n          <th>Expiration Date</th>\r\n          <th>Quantity</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {inventoryRows}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Note for Tran: as a separate component as a different page view, need to get addProduct from\r\n// table?\r\n// We show a link to ProductAdd on NavBar in Page.jsx, and make sure that link gets routed\r\n// correctly through <Route path=...> in Contents.jsx\r\n// Line 27 addProduct comes from props, which is from Line 89 in InventoryList\r\n\r\n/**\r\n * Represent form for adding a product.\r\n */\r\nexport default class ProductAdd extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const form = document.forms.productAdd;\r\n    const product = {\r\n      description: form.description.value,\r\n      quantity: form.quantity.value,\r\n      createdDate: new Date(new Date().getTime() + 1000 * 60 * 60 * 24 * 10),\r\n    };\r\n\r\n    const { addProduct } = this.props;\r\n    addProduct(product);\r\n\r\n    // clear form of entered values\r\n    form.description.value = '';\r\n    form.quantity.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form name=\"productAdd\" onSubmit={this.handleSubmit}>\r\n        <input type=\"text\" name=\"description\" placeholder=\"Product Name\" />\r\n        <input type=\"text\" name=\"quantity\" placeholder=\"Quantity\" />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nProductAdd.propTypes = {\r\n  addProduct: PropTypes.func.isRequired,\r\n};\r\n","import fetch from 'isomorphic-fetch';\r\n\r\nconst dateRegex = new RegExp('^\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d');\r\n\r\nfunction jsonDateReviver(key, value) {\r\n  if (dateRegex.test(value)) return new Date(value); return value;\r\n}\r\n\r\nexport default async function graphQLFetch(query, variables = {}, showError = null) {\r\n  const apiEndpoint = (__isBrowser__) // eslint-disable-line no-undef\r\n    ? window.ENV.UI_API_ENDPOINT\r\n    : process.env.UI_SERVER_API_ENDPOINT;\r\n  try {\r\n    const response = await fetch(apiEndpoint, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ query, variables }),\r\n    });\r\n    const body = await response.text();\r\n    const result = JSON.parse(body, jsonDateReviver);\r\n\r\n    if (result.errors) {\r\n      const error = result.errors[0];\r\n      if (error.extensions.code === 'BAD_USER_INPUT') {\r\n        const details = error.extensions.exception.errors.join('\\n ');\r\n          if (showError) showError(`${error.message}:\\n ${details}`);\r\n      } else if (showError) {\r\n          showError(`${error.extensions.code}: ${error.message}`);\r\n      }\r\n    }\r\n    return result.data;\r\n  } catch (e) {\r\n      if (showError) showError(`Error in sending data to server: ${e.message}`);\r\n    return null;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Alert, Collapse } from 'react-bootstrap';\r\nexport default class Toast extends React.Component {\r\n  componentDidUpdate() {\r\n    const { showing, onDismiss } = this.props;\r\n    if (showing) {\r\n      clearTimeout(this.dismissTimer);\r\n      this.dismissTimer = setTimeout(onDismiss, 5000);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearTimeout(this.dismissTimer);\r\n  }\r\n  render() {\r\n    const {\r\n      showing, bsStyle, onDismiss, children,\r\n    } = this.props;\r\n    return (\r\n      <Collapse in={showing}>\r\n        <div style={{ position: 'fixed', bottom: 20, left: 20 }}>\r\n          <Alert bsStyle={bsStyle} onDismiss={onDismiss}>\r\n            {children}\r\n          </Alert>\r\n        </div>\r\n      </Collapse>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport graphQLFetch from './graphQLFetch.js';\r\n\r\nexport default class ProductInformation extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { product: {} };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { match: { params: { id: prevId } } } = prevProps;\r\n    const { match: { params: { id } } } = this.props;\r\n    if (prevId !== id) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    const { match: { params: { id } } } = this.props;\r\n    const query = `query product($id: Int!) {\r\n      product (id: $id) {\r\n        id information\r\n      }\r\n    }`;\r\n\r\n    const data = await graphQLFetch(query, { id: parseInt(id, 10) });\r\n    if (data) {\r\n      this.setState({ product: data.product });\r\n    } else {\r\n      this.setState({ product: {} });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { product: { information } } = this.state;\r\n    return (\r\n      <div>\r\n        <h3>Information</h3>\r\n        <pre>{information}</pre>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport URLSearchParams from 'url-search-params';\r\nimport { Route } from 'react-router-dom';\r\nimport { Panel } from 'react-bootstrap';\r\n\r\nimport ProductFilter from './ProductFilter.jsx';\r\nimport InventoryTable from './InventoryTable.jsx';\r\nimport ProductAdd from './ProductAdd.jsx';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport Toast from './Toast.jsx';\r\nimport ProductInformation from './ProductInformation.jsx';\r\n\r\n\r\n/**\r\n * Represent overall inventory list in webpage.\r\n */\r\nexport default class InventoryList extends React.Component {\r\n  constructor() {\r\n    super();\r\n      this.state = {\r\n          inventory: [],\r\n          toastVisible: false,\r\n          toastMessage: ' ',\r\n          toastType: 'info',\r\n      };\r\n      this.deleteProduct = this.deleteProduct.bind(this);\r\n      this.showSuccess = this.showSuccess.bind(this);\r\n      this.showError = this.showError.bind(this);\r\n      this.dismissToast = this.dismissToast.bind(this);\r\n  }\r\n\r\n  // Pg 64\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  // pg 245\r\n  componentDidUpdate(prevProps) {\r\n    const { location: { search: prevSearch } } = prevProps;\r\n    const { location: { search } } = this.props;\r\n    if (prevSearch !== search) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  // Pg 64\r\n  async loadData() {\r\n    const { location: { search } } = this.props;\r\n    const params = new URLSearchParams(search);\r\n    const vars = {};\r\n    if (params.get('quantity')) vars.quantity = parseInt(params.get('quantity'), 10);\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log('Loading data....');\r\n\r\n    // Pg 105\r\n    const query = `query productList($quantity: Int) {\r\n      productList(quantity: $quantity) {\r\n        id description createdDate\r\n        expirationDate quantity category\r\n      }\r\n    }`;\r\n\r\n      const data = await graphQLFetch(query, vars, this.showError);\r\n    if (data) {\r\n      // eslint-disable-next-line no-console\r\n      console.log('Data retrieved from server.');\r\n      this.setState({ inventory: data.productList });\r\n    }\r\n  }\r\n\r\n  // need to revise async delete\r\n  async deleteProduct(index) {\r\n    const query = `mutation productDelete($id: Int!) {\r\n      productDelete(id: $id)\r\n    }`;\r\n    const { inventory } = this.state;\r\n    const { location: { pathname, search }, history } = this.props;\r\n      const { id } = inventory[index];\r\n      const data = await graphQLFetch(query, { id: parseInt(id, 10) }, this.showError);\r\n    if (data && data.productDelete) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.inventory];\r\n        if (pathname === `/products/${id}`) {\r\n          history.push({ pathname: '/products', search });\r\n        }\r\n        newList.splice(index, 1);\r\n        return { inventory: newList };\r\n      });\r\n        this.showSuccess(`Deleted product ${id} successfully.`);\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n    showSuccess(message) {\r\n        this.setState({\r\n            toastVisible: true, toastMessage: message, toastType: 'success',\r\n        });\r\n    }\r\n\r\n    showError(message) {\r\n        this.setState({\r\n            toastVisible: true, toastMessage: message, toastType: 'danger',\r\n        });\r\n    }\r\n\r\n    dismissToast() {\r\n        this.setState({ toastVisible: false });\r\n    }\r\n\r\n  render() {\r\n      const { inventory } = this.state;\r\n      const { toastVisible, toastType, toastMessage } = this.state;\r\n    const { match } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Panel>\r\n          <Panel.Heading>\r\n            <Panel.Title toggle>Filter</Panel.Title>\r\n          </Panel.Heading>\r\n          <Panel.Body collapsible>\r\n            <ProductFilter />\r\n          </Panel.Body>\r\n        </Panel>\r\n        <hr />\r\n        <InventoryTable inventory={inventory} deleteProduct={this.deleteProduct} />\r\n        <hr />\r\n        <Route path={`${match.path}/:id`} component={ProductInformation} />\r\n            <Toast\r\n                showing={toastVisible}\r\n                onDismiss={this.dismissToast}\r\n                bsStyle={toastType}\r\n            >\r\n                {toastMessage}\r\n            </Toast>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nfunction format(num) {\r\n  return num != null ? num.toString() : '';\r\n}\r\n\r\nfunction unformat(str) {\r\n  const val = parseInt(str, 10);\r\n  return Number.isNaN(val) ? null : val;\r\n}\r\n\r\nexport default class NumInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: format(props.value) };\r\n    this.onBlur = this.onBlur.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    if (e.target.value.match(/^\\d*$/)) {\r\n      this.setState({ value: e.target.value });\r\n    }\r\n  }\r\n\r\n  onBlur(e) {\r\n    const { onChange } = this.props;\r\n    const { value } = this.state;\r\n    onChange(e, unformat(value));\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        {...this.props}\r\n        value={value}\r\n        onBlur={this.onBlur}\r\n        onChange={this.onChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nfunction displayFormat(date) {\r\n  return (date != null) ? date.toDateString() : '';\r\n}\r\n\r\nfunction editFormat(date) {\r\n  return (date != null) ? date.toISOString().substr(0, 10) : '';\r\n}\r\n\r\nfunction unformat(str) {\r\n  const val = new Date(str);\r\n  return Number.isNaN(val.getTime()) ? null : val;\r\n}\r\n\r\nexport default class DateInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: editFormat(props.value),\r\n      focused: false,\r\n      valid: true,\r\n    };\r\n    this.onFocus = this.onFocus.bind(this);\r\n    this.onBlur = this.onBlur.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onFocus() {\r\n    this.setState({ focused: true });\r\n  }\r\n\r\n  onBlur(e) {\r\n    const { value, valid: oldValid } = this.state;\r\n    const { onValidityChange, onChange } = this.props;\r\n    const dateValue = unformat(value);\r\n    const valid = value === '' || dateValue != null;\r\n    if (valid !== oldValid && onValidityChange) {\r\n      onValidityChange(e, valid);\r\n    }\r\n    this.setState({ focused: false, valid });\r\n    if (valid) onChange(e, dateValue);\r\n  }\r\n\r\n  onChange(e) {\r\n    if (e.target.value.match(/^[\\d-]*$/)) {\r\n      this.setState({ value: e.target.value });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { valid, focused, value } = this.state;\r\n    const { value: origValue, name } = this.props;\r\n    const className = (!valid && !focused) ? 'invalid' : null;\r\n    const displayValue = (focused || !valid) ? value\r\n      : displayFormat(origValue);\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        size={20}\r\n        name={name}\r\n        className={className}\r\n        value={displayValue}\r\n        placeholder={focused ? 'yyyy-mm-dd' : null}\r\n        onFocus={this.onFocus}\r\n        onBlur={this.onBlur}\r\n        onChange={this.onChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","const store = {};\r\nexport default store;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport NumInput from './NumInput.jsx';\r\nimport DateInput from './DateInput.jsx';\r\nimport Toast from './Toast.jsx';\r\nimport store from './store.js';\r\n\r\nexport default class ProductEdit extends React.Component {\r\n    static async fetchData(match, showError) {\r\n        const query = `query product($id: Int!) {\r\n      product(id: $id) {\r\n        id description createdDate expirationDate\r\n        quantity category information\r\n      }\r\n    }`;\r\n        const { params: { id } } = match;\r\n        const result = await graphQLFetch(query, { id: parseInt(id, 10) }, showError);\r\n        return result;\r\n    }\r\n    constructor() {\r\n        super();\r\n        const product = store.initialData ? store.initialData.product : null;\r\n        delete store.initialData;\r\n        this.state = {\r\n            product,\r\n            invalidFields: {},\r\n            toastVisible: false,\r\n            toastMessage: ' ',\r\n            toastType: 'success',\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onValidityChange = this.onValidityChange.bind(this);\r\n        this.showSuccess = this.showSuccess.bind(this);\r\n        this.showError = this.showError.bind(this);\r\n        this.dismissToast = this.dismissToast.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { product } = this.state;\r\n        if (product == null) this.loadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { match: { params: { id: prevId } } } = prevProps;\r\n        const { match: { params: { id } } } = this.props;\r\n        if (id !== prevId) {\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    onChange(event, naturalValue) {\r\n        const { name, value: textValue } = event.target;\r\n        const value = naturalValue === undefined ? textValue : naturalValue;\r\n        this.setState(prevState => ({\r\n            product: { ...prevState.product, [name]: value },\r\n        }));\r\n    }\r\n\r\n    onValidityChange(event, valid) {\r\n        const { name } = event.target;\r\n        this.setState((prevState) => {\r\n            const invalidFields = { ...prevState.invalidFields, [name]: !valid };\r\n            if (valid) delete invalidFields[name];\r\n            return { invalidFields };\r\n        });\r\n    }\r\n\r\n    async handleSubmit(e) {\r\n        e.preventDefault();\r\n        const { product, invalidFields } = this.state;\r\n        if (Object.keys(invalidFields).length !== 0) return;\r\n        const query = `mutation productUpdate(\r\n      $id: Int!\r\n      $changes: ProductUpdateInputs!\r\n    ) {\r\n      productUpdate(\r\n        id: $id\r\n        changes: $changes\r\n      ) {\r\n        id description createdDate expirationDate \r\n        quantity category information \r\n      }\r\n    }`;\r\n        const { id, created, ...changes } = product;\r\n        const data = await graphQLFetch(query, { changes, id: parseInt(id, 10) }, this.showError);\r\n        if (data) {\r\n            this.setState({ product: data.productUpdate });\r\n            this.showSuccess('Updated issue successfully');\r\n        }\r\n    }\r\n\r\n    async loadData() {\r\n        const { match } = this.props;\r\n        const data = await ProductEdit.fetchData(match, null, this.showError);\r\n        this.setState({ product: data ? data.product : {}, invalidFields: {} });\r\n    }\r\n        // if (data) {\r\n        //   const { product } = data;\r\n        //   product.description = product.description != null ? product.description : '';\r\n        //   // product.createdDate = product.createdDate ? product.createdDate.toDateString() : '';\r\n        //   // product.expirationDate = product.expirationDate ? product.expirationDate.toDateString() : '';\r\n        //   product.category = product.category != null ? product.category : '';\r\n        //   product.information = product.information != null ? product.information : '';\r\n        //   this.setState({ product, invalidFields: {} });\r\n        // } else {\r\n        //   this.setState({ product: {}, invalidFields: {} });\r\n        // }\r\n        showSuccess(message) {\r\n            this.setState({\r\n                toastVisible: true, toastMessage: message, toastType: 'success',\r\n            });\r\n        }\r\n        showError(message) {\r\n            this.setState({\r\n                toastVisible: true, toastMessage: message, toastType: 'danger',\r\n            });\r\n        }\r\n        dismissToast() {\r\n            this.setState({ toastVisible: false });\r\n        }\r\n\r\n\r\n  render() {\r\n    const { product } = this.state;\r\n    if (product === null) return null;\r\n    const { product: { id } } = this.state;\r\n    const { match: { params: { id: propsId } } } = this.props;\r\n    if (id === null) {\r\n      if (propsId != null) {\r\n        return <h3>{`Product with ID ${propsId} not found at all.`}</h3>;\r\n      }\r\n      return null;\r\n    }\r\n\r\n    const { invalidFields } = this.state;\r\n    let validationMessage;\r\n\r\n    if (Object.keys(invalidFields).length !== 0) {\r\n      validationMessage = (\r\n        <div className=\"error\">\r\n          Please correct invalid fields before submitting.\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const { product: { description, quantity } } = this.state;\r\n    const { product: { category, information } } = this.state;\r\n    const { product: { createdDate, expirationDate } } = this.state;\r\n    const { toastVisible, toastMessage, toastType } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h3>{`Editing product: ${id}`}</h3>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Description:</td>\r\n              <td>\r\n                <textarea\r\n                  rows={8}\r\n                  cols={50}\r\n                  name=\"description\"\r\n                  value={description}\r\n                  onChange={this.onChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Created:</td>\r\n              <td>\r\n                <DateInput\r\n                  name=\"createdDate\"\r\n                  value={createdDate}\r\n                  onChange={this.onChange}\r\n                  onValidityChange={this.onValidityChange}\r\n                  key={id}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Expiration:</td>\r\n              <td>\r\n                <DateInput\r\n                  name=\"expirationDate\"\r\n                  value={expirationDate}\r\n                  onChange={this.onChange}\r\n                  onValidityChange={this.onValidityChange}\r\n                  key={id}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Quantity:</td>\r\n              <td>\r\n                <NumInput\r\n                  name=\"quantity\"\r\n                  value={quantity}\r\n                  onChange={this.onChange}\r\n                  key={id}\r\n                />\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>Category:</td>\r\n              <td>\r\n                <select name=\"category\" value={category} onChange={this.onChange}>\r\n                  <option value=\"Muffin\">Muffin</option>\r\n                  <option value=\"Cupcake\">Cupcake</option>\r\n                  <option value=\"Cake\">Cake</option>\r\n                  <option value=\"Cookie\">Cookie</option>\r\n                  <option value=\"Pastry\">Pastry</option>\r\n                  <option value=\"Other\">Other</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>Information:</td>\r\n              <td>\r\n                <textarea\r\n                  rows={8}\r\n                  cols={50}\r\n                  name=\"information\"\r\n                  value={information}\r\n                  onChange={this.onChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td />\r\n              <td><button type=\"submit\">Submit</button></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {validationMessage}\r\n        <Link to={`/edit/${id - 1}`}>Prev</Link>\r\n        {' | '}\r\n            <Link to={`/edit/${id + 1}`}>Next</Link>\r\n            <Toast\r\n                showing={toastVisible}\r\n                onDismiss={this.dismissToast}\r\n                bsStyle={toastType}\r\n            >\r\n                {toastMessage}\r\n            </Toast>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport store from './store.js';\r\nimport graphQLFetch from './graphQLFetch.js';\r\n\r\nexport default class About extends React.Component {\r\n    static async fetchData() {\r\n        const data = await graphQLFetch('query {about}');\r\n        return data;\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        const apiAbout = store.initialData ? store.initialData.about : null;\r\n        delete store.initialData;\r\n        this.state = { apiAbout };\r\n    }\r\n    async componentDidMount() {\r\n        const { apiAbout } = this.state;\r\n        if (apiAbout == null) {\r\n            const data = await About.fetchData();\r\n            this.setState({ apiAbout: data.about });\r\n        }\r\n    }\r\n    render() {\r\n        const { apiAbout } = this.state;\r\n        return (\r\n            <div className=\"text-center\">\r\n                <h3>Inventory Tracker version 0.9</h3>\r\n                <h4>\r\n                    {apiAbout}\r\n                </h4>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nfunction NotFound() {\r\n  return <h1>Page Not Found</h1>;\r\n}\r\nexport default NotFound;","/* eslint \"react/prefer-stateless-function\": \"off\" */\r\n\r\nimport React from 'react';\r\nimport { FormGroup, ControlLabel,Button,\r\n    FormControl, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup}  from 'react-bootstrap';\r\nimport PropTypes from \"prop-types\";\r\nimport graphQLFetch from \"./graphQLFetch\";\r\n\r\nexport default class AccountCreate extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n\r\n    async handleSubmit(e) {\r\n        e.preventDefault();\r\n        const form = document.forms.accountCreate;\r\n\r\n\r\n        const user = {\r\n            username: form.username.value,\r\n            password: form.password.value,\r\n            role: form.options.value,\r\n        };\r\n\r\n\r\n        const query = `mutation createUser($user: UserInputs!) {\r\n          userAdd(user: $user) {\r\n            username password role\r\n          }\r\n        }`;\r\n\r\n\r\n        const data = await graphQLFetch(query, { user });\r\n        if (data) {\r\n            this.setState({ accountCreated: true });\r\n        }\r\n        form.username.value = \"\";\r\n        form.password.value = \"\";\r\n\r\n        //TODO adda  toast with 'success' or failure\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n          <form onSubmit={this.handleSubmit} name=\"accountCreate\">\r\n              <FormGroup>\r\n                  <Col sm={3}>\r\n                  <ControlLabel>Account Information</ControlLabel>\r\n                  <FormControl type=\"text\" name=\"username\" placeholder=\"username\"/>\r\n                  <FormControl type=\"password\" name=\"password\" placeholder=\"password\" />\r\n                      <ButtonToolbar>\r\n                          <ToggleButtonGroup justified type=\"radio\" name=\"options\" defaultValue={'User'}>\r\n                              <ToggleButton name=\"admin\" value={'Admin'}>Admin</ToggleButton>\r\n                              <ToggleButton value={'User'}>Non-Admin</ToggleButton>\r\n                          </ToggleButtonGroup>\r\n                      </ButtonToolbar>\r\n                      <Button type=\"submit\">Create</Button>\r\n                  </Col>\r\n              </FormGroup>\r\n          </form>\r\n    );\r\n  }\r\n}\r\n\r\nAccountCreate.propTypes = {\r\n    addUser: PropTypes.func,\r\n};\r\n","/* eslint \"react/prefer-stateless-function\": \"off\" */\r\n\r\nimport React from 'react';\r\nimport {\r\n  ButtonToolbar,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  ToggleButton,\r\n  ToggleButtonGroup\r\n} from \"react-bootstrap\";\r\nimport graphQLFetch from \"./graphQLFetch\";\r\n\r\n\r\nexport default class Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    const form = document.forms.loginForm;\r\n\r\n\r\n    let username = form.username.value;\r\n    let password = form.password.value;\r\n\r\n\r\n    const query = `query ($username: String!, $password:String!) {\r\n        user (username: $username, password: $password) {\r\n          _id\r\n        }\r\n    }`;\r\n\r\n    const data = await graphQLFetch(query, { username, password });\r\n\r\n    if (data.user !== null ) {\r\n      alert(\"account exists!\");\r\n    }\r\n    else {\r\n      alert(\"doesn't exist\");\r\n    }\r\n    form.username.value = \"\";\r\n    form.password.value = \"\";\r\n  }\r\n\r\n\r\n  onSuccess(username) {\r\n    this.state = { authenticated: true };\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <form onSubmit={this.handleSubmit} name=\"loginForm\">\r\n          <FormGroup>\r\n            <Col sm={3}>\r\n              <FormControl type=\"text\" name=\"username\" placeholder=\"username\"/>\r\n              <FormControl type=\"password\" name=\"password\" placeholder=\"password\" />\r\n              <button bsType=\"submit\">Log-In</button>\r\n            </Col>\r\n          </FormGroup>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n","import InventoryList from './InventoryList.jsx';\r\nimport ProductReport from './ProductReport.jsx';\r\nimport ProductEdit from './ProductEdit.jsx';\r\nimport About from './About.jsx';\r\nimport NotFound from './NotFound.jsx';\r\nimport LandingPage from './LandingPage.jsx';\r\n\r\nconst routes = [\r\n    { path: '/products', component: InventoryList },\r\n    { path: '/edit/:id', component: ProductEdit },\r\n    { path: '/report', component: ProductReport },\r\n    { path: '/about', component: About },\r\n    { path: '/sign-in', component: LandingPage },\r\n    { path: '*', component: NotFound },\r\n];\r\nexport default routes;\r\n","import React from 'react';\r\n\r\nexport default function ProductReport() {\r\n  return (\r\n    <div>\r\n      <h2>This is a placeholder for the Product Report</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Grid,Tabs,Tab } from 'react-bootstrap';\r\nimport AccountCreate from './AccountCreate.jsx';\r\nimport Login from './Login.jsx';\r\n\r\n\r\nexport default function LandingPage() {\r\n  return (\r\n    <div>\r\n        <Grid>\r\n              <Tabs defaultActiveKey={\"Login\"} id=\"home\">\r\n                  <Tab eventKey={\"Create\"} title=\"Create Account\">\r\n                      <h1>Create an Account</h1>\r\n                      <AccountCreate />\r\n                  </Tab>\r\n                  <Tab eventKey={\"Login\"} title=\"Log-In\">\r\n                      <h1>Login with Existing Account</h1>\r\n                        <Login style={{alignSelf: 'flex-end'}}/>\r\n                  </Tab>\r\n              </Tabs>\r\n        </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport routes from './routes.js';\r\n\r\n// <Route component={NotFound} />\r\nexport default class Contents extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { authenticated: false };\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Redirect exact from=\"/\" to=\"/products\" />\r\n                {routes.map(attrs => <Route {...attrs} key={attrs.path} />)}\r\n            </Switch>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport store from './store.js';\r\nimport {\r\n  Modal, NavItem, Glyphicon, Tooltip, OverlayTrigger,\r\n  Form, FormGroup, FormControl, ControlLabel, \r\n  Button, ButtonToolbar\r\n} from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ProductAddNav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showing: false,\r\n    };\r\n    this.showModal = this.showModal.bind(this);\r\n    this.hideModal = this.hideModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  showModal() {\r\n    this.setState({ showing: true });\r\n  }\r\n\r\n  hideModal() {\r\n    this.setState({ showing: false });\r\n  }\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.hideModal();\r\n\r\n    const form = document.forms.productAdd;\r\n    const quantity = parseInt(form.quantity.value); \r\n    // quantity can have negative value rn\r\n    const product = {\r\n      description: form.description.value,\r\n      quantity: isNaN(quantity) ? 0 : quantity,\r\n      createdDate: new Date(new Date().getTime() + 1000 * 60 * 60 * 24 * 10),\r\n      category: form.category.value,\r\n      information: form.information.value,\r\n    }\r\n\r\n    const query = `mutation productAdd($product: ProductInputs!) {\r\n      productAdd(product: $product) {\r\n        id\r\n      }\r\n    }`;\r\n\r\n    const data = await graphQLFetch(query, { product });\r\n\r\n    // TODO: find a way to rerender without relying on routing back to home pg\r\n    if (data) {\r\n      const { history } = this.props;\r\n      history.push(`/`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { showing } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <NavItem onClick={this.showModal}>\r\n          <OverlayTrigger\r\n            placement=\"left\"\r\n            delayShow={1000}\r\n            overlay={<Tooltip id=\"/products\">Add Product</Tooltip>}\r\n          >\r\n            <Glyphicon glyph=\"plus\" />\r\n          </OverlayTrigger>\r\n        </NavItem>\r\n        <Modal keyboard show={showing} onHide={this.hideModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add New Product</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form name=\"productAdd\">\r\n              <FormGroup>\r\n                <ControlLabel>Product name: </ControlLabel>\r\n                <FormControl name=\"description\" type=\"text\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel>Quantity: </ControlLabel>\r\n                <FormControl name=\"quantity\" type=\"number\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel>Category: </ControlLabel>\r\n                <FormControl name=\"category\" componentClass=\"select\" placeholder=\"select\">\r\n                  <option value=\"Muffin\">Muffin</option>\r\n                  <option value=\"Cupcake\">Cupcake</option>\r\n                  <option value=\"Cake\">Cake</option>\r\n                  <option value=\"Cookie\">Cookie</option>\r\n                  <option value=\"Pastry\">Pastry</option>\r\n                  <option value=\"Other\">Other</option>\r\n                </FormControl>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel>Information</ControlLabel>\r\n                <FormControl name=\"information\" componentClass=\"textarea\" placeholder=\"Product information\" />\r\n              </FormGroup>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <ButtonToolbar>\r\n              <Button\r\n                type=\"button\"\r\n                bsStyle=\"primary\"\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button bsStyle=\"link\" onClick={this.hideModal}>Cancel</Button>\r\n            </ButtonToolbar>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ProductAddNav);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {\r\n  Navbar, Nav, NavItem, MenuItem, Grid,\r\n} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nimport Contents from './Contents.jsx';\r\nimport ProductAddNav from './ProductAddNav.jsx'\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <Navbar>\r\n      <Navbar.Header>\r\n        <Navbar.Brand>Inventory Tracker</Navbar.Brand>\r\n      </Navbar.Header>\r\n\r\n      <Nav>\r\n        <LinkContainer exact to=\"/\"><NavItem>Home</NavItem></LinkContainer>\r\n\r\n        <LinkContainer to=\"/about\"><MenuItem>About</MenuItem></LinkContainer>\r\n\r\n        <LinkContainer to=\"/sign-in\"><NavItem>Sign in</NavItem></LinkContainer>\r\n\r\n        <LinkContainer to=\"/products\"><NavItem>Inventory Overview </NavItem></LinkContainer>\r\n\r\n\r\n      </Nav>\r\n\r\n      <Nav pullRight>\r\n        <ProductAddNav />\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default class Page extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar authenticated={this.props.authenticated} />\r\n        <Grid fluid>\r\n          <Contents />\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import 'babel-polyfill';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Page from '../src/Page.jsx';\r\nimport store from '../src/store.js';\r\n// eslint-disable-next-line no-underscore-dangle\r\nstore.initialData = window.__INITIAL_DATA__;\r\n\r\nconst element = (\r\n  <Router>\r\n    <Page />\r\n  </Router>\r\n);\r\n\r\nReactDOM.hydrate(element, document.getElementById('content'));\r\n\r\nif (module.hot) {\r\n  module.hot.accept();\r\n}\r\n"],"sourceRoot":""}