{"version":3,"sources":["webpack:///./server/render.jsx"],"names":["render","req","res","activeRoute","routes","find","route","matchPath","path","initialData","component","fetchData","match","index","url","indexOf","search","substr","store","context","element","body","ReactDOMServer","renderToString","send","template"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5B,QAAMC,WAAW,GAAGC,sDAAM,CAACC,IAAP,CAChBC,KAAK,IAAIC,kEAAS,CAACN,GAAG,CAACO,IAAL,EAAWF,KAAX,CADF,CAApB;AAGA,MAAIG,WAAJ;;AACA,MAAIN,WAAW,IAAIA,WAAW,CAACO,SAAZ,CAAsBC,SAAzC,EAAoD;AAChD,UAAMC,KAAK,GAAGL,kEAAS,CAACN,GAAG,CAACO,IAAL,EAAWL,WAAX,CAAvB;AACA,UAAMU,KAAK,GAAGZ,GAAG,CAACa,GAAJ,CAAQC,OAAR,CAAgB,GAAhB,CAAd;AACA,UAAMC,MAAM,GAAGH,KAAK,KAAK,CAAC,CAAX,GAAeZ,GAAG,CAACa,GAAJ,CAAQG,MAAR,CAAeJ,KAAf,CAAf,GAAuC,IAAtD;AACAJ,eAAW,GAAG,MAAMN,WAAW,CAACO,SAAZ,CAAsBC,SAAtB,CAAgCC,KAAhC,EAAuCI,MAAvC,CAApB;AACH;;AACDE,uDAAK,CAACT,WAAN,GAAoBA,WAApB;AACA,QAAMU,OAAO,GAAG,EAAhB;AACA,QAAMC,OAAO,gBACT,2DAAC,6DAAD;AAAc,YAAQ,EAAEnB,GAAG,CAACa,GAA5B;AAAiC,WAAO,EAAE;AAA1C,kBACI,2DAAC,qDAAD,OADJ,CADJ;AAKA,QAAMO,IAAI,GAAGC,uDAAc,CAACC,cAAf,CAA8BH,OAA9B,CAAb;AACFlB,KAAG,CAACsB,IAAJ,CAASC,4DAAQ,CAACJ,IAAD,EAAOZ,WAAP,CAAjB;AACD;;AACcT,qEAAf,E","file":"server.3c45d75948801e875965.hot-update.js","sourcesContent":["import React from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { StaticRouter, matchPath } from 'react-router-dom';\r\nimport Page from '../src/Page.jsx';\r\nimport template from './template.js';\r\nimport store from '../src/store.js';\r\nimport routes from '../src/routes.js';\r\n\r\nasync function render(req, res) {\r\n    const activeRoute = routes.find(\r\n        route => matchPath(req.path, route),\r\n    );\r\n    let initialData;\r\n    if (activeRoute && activeRoute.component.fetchData) {\r\n        const match = matchPath(req.path, activeRoute);\r\n        const index = req.url.indexOf('?');\r\n        const search = index !== -1 ? req.url.substr(index) : null;\r\n        initialData = await activeRoute.component.fetchData(match, search);\r\n    }\r\n    store.initialData = initialData;\r\n    const context = {};\r\n    const element = (\r\n        <StaticRouter location={req.url} context={{}}>\r\n            <Page />\r\n        </StaticRouter>\r\n    );\r\n    const body = ReactDOMServer.renderToString(element);\r\n  res.send(template(body, initialData));\r\n}\r\nexport default render;"],"sourceRoot":""}