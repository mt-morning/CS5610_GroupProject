{"version":3,"sources":["webpack:///./src/ProductEdit.jsx"],"names":["ProductEdit","React","Component","fetchData","match","showError","query","params","id","result","graphQLFetch","constructor","product","store","initialData","state","invalidFields","onChange","bind","handleSubmit","componentDidMount","loadData","componentDidUpdate","prevProps","prevId","props","event","naturalValue","name","value","textValue","target","undefined","setState","prevState","e","preventDefault","Object","keys","length","created","changes","data","productUpdate","alert","search","description","createdDate","toDateString","expirationDate","due","category","information","render","propsId","quantity"],"mappings":"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","file":"server.649bacfa7391a91b7e90.hot-update.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport graphQLFetch from './graphQLFetch.js';\r\nimport NumInput from './NumInput.jsx';\r\nimport store from './store.js';\r\n\r\nexport default class ProductEdit extends React.Component {\r\n    static async fetchData(match, showError) {\r\n        const query = `query product($id: Int!) {\r\n      product(id: $id) {\r\n        id description createdDate expirationDate\r\n        quantity category information\r\n      }\r\n    }`;\r\n        const { params: { id } } = match;\r\n        const result = await graphQLFetch(query, { id }, showError);\r\n        return result;\r\n    }\r\n  constructor() {\r\n      super();\r\n      const product = store.initialData ? store.initialData.product : null;\r\n      delete store.initialData;\r\n    this.state = {\r\n        product, invalidFields: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n      const { product } = this.state;\r\n      if (product == null) this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { match: { params: { id: prevId } } } = prevProps;\r\n    const { match: { params: { id } } } = this.props;\r\n    if (id !== prevId) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  onChange(event, naturalValue) {\r\n    const { name, value: textValue } = event.target;\r\n    const value = naturalValue === undefined ? textValue : naturalValue;\r\n    this.setState(prevState => ({\r\n      product: { ...prevState.product, [name]: value },\r\n    }));\r\n  }\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    const { product, invalidFields } = this.state;\r\n    if (Object.keys(invalidFields).length !== 0) return;\r\n    const query = `mutation productUpdate(\r\n      $id: Int!\r\n      $changes: ProductUpdateInputs!\r\n    ) {\r\n      productUpdate(\r\n        id: $id\r\n        changes: $changes\r\n      ) {\r\n        description createdDate expirationDate \r\n        quantity category information \r\n      }\r\n    }`;\r\n    const { id, created, ...changes } = product;\r\n    const data = await graphQLFetch(query, { changes, id });\r\n    if (data) {\r\n      this.setState({ product: data.productUpdate });\r\n      alert('Updated product successfully'); // eslint-disable-line no-alert\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n      const { match } = this.props;\r\n      const data = await ProductEdit.fetchData(match, search, this.showError);\r\n    if (data) {\r\n      const { product } = data;\r\n      product.description = product.description != null ? product.description : '';\r\n      product.createdDate = product.createdDate ? product.toDateString() : '';\r\n      product.expirationDate = product.expirationDate ? product.due.toDateString() : '';\r\n      product.category = product.category != null ? product.category : '';\r\n      product.information = product.information != null ? product.information : '';\r\n      this.setState({ product });\r\n    } else {\r\n      this.setState({ product: {} });\r\n    }\r\n  }\r\n\r\n    render() {\r\n        const { product } = this.state;\r\n        if (product == null) return null;\r\n    const { product: { id } } = this.state;\r\n    const { match: { params: { id: propsId } } } = this.props;\r\n    if (id == null) {\r\n      if (propsId != null) {\r\n        return <h3>{`Product with ID ${propsId} not found.`}</h3>;\r\n      }\r\n      return null;\r\n    }\r\n\r\n    const { product: { description, quantity } } = this.state;\r\n    const { product: { category, information } } = this.state;\r\n    const { product: { createdDate, expirationDate } } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h3>{`Editing product: ${id}`}</h3>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Description:</td>\r\n              <td>\r\n                <textarea\r\n                  rows={8}\r\n                  cols={50}\r\n                  name=\"description\"\r\n                  value={description}\r\n                  onChange={this.onChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Created:</td>\r\n              <td>{createdDate.toDateString()}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Expiration:</td>\r\n              <td>{expirationDate.toDateString()}</td>\r\n            </tr>\r\n \r\n            <tr>\r\n              <td>Quantity:</td>\r\n              <td>\r\n                <NumInput\r\n                  name=\"quantity\"\r\n                  value={quantity}\r\n                  onChange={this.onChange}\r\n                  key={id}\r\n                />\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>Category:</td>\r\n              <td>\r\n                <select name=\"category\" value={category} onChange={this.onChange}>\r\n                  <option value=\"Muffin\">Muffin</option>\r\n                  <option value=\"Cupcake\">Cupcake</option>\r\n                  <option value=\"Cake\">Cake</option>\r\n                  <option value=\"Cookie\">Cookie</option>\r\n                  <option value=\"Pastry\">Pastry</option>\r\n                  <option value=\"Other\">Other</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>Information:</td>\r\n              <td>\r\n                <textarea\r\n                  rows={8}\r\n                  cols={50}\r\n                  name=\"information\"\r\n                  value={information}\r\n                  onChange={this.onChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td />\r\n              <td><button type=\"submit\">Submit</button></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <Link to={`/edit/${id - 1}`}>Prev</Link>\r\n        {' | '}\r\n        <Link to={`/edit/${id + 1}`}>Next</Link>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}